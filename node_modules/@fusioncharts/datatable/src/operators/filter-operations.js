import{leftMostExactOrGreater,rightMostExactOrLesser}from"../utils/sorted-search";import{columnIndexOf}from"../utils/datatable-utils";import{OperatorTypes}from"./type-enums";import{numberComparator,stringComparator}from"../utils/comparators";function indexColBetween(columnIndex,startVal,endVal,_comparer){var start=startVal,end=endVal,comparer=_comparer;return{ops:"indexColBetween",type:OperatorTypes.IndexOpsFilter,_updateArgs:function _updateArgs(startLimit,endLimit){start=startLimit;end=endLimit},fn:function fn(_data,schema,config,generatorFn){var data=_data,loIndex,hiIndex,hiComparer;if(generatorFn){data=generatorFn.call()}if(!comparer){comparer=_getIndexColComparer(schema,columnIndex)}if(schema[columnIndex].type==="interval"){hiComparer=function hiComparer(a,b){return numberComparator(a[columnIndex].end,b)}}else{hiComparer=comparer}loIndex=leftMostExactOrGreater(start,data,comparer,0,data.length);hiIndex=rightMostExactOrLesser(end,data,hiComparer,loIndex,data.length);return{data:data,schema:schema,config:config,generatorFn:function generatorFn(){return data.slice(loIndex,hiIndex+1)}}}}}function between(columnName,startVal,endVal){var start=startVal,end=endVal;return{ops:"between",type:OperatorTypes.GenericFilter,_updateArgs:function _updateArgs(startLimit,endLimit){start=startLimit;end=endLimit},fn:function fn(_data,schema,config,generatorFn){var data=_data,columnIndex,comparer;if(generatorFn){data=generatorFn.call()}columnIndex=columnIndexOf(columnName,schema);if(columnIndex>=0){comparer=_getIndexColComparer(schema,columnIndex);if(config&&config.indexBy===columnName){var indexOps=indexColBetween(columnIndex,start,end,comparer);return indexOps.fn(data,schema,config)}return{data:data,schema:schema,config:config,generatorFn:function generatorFn(){return data.filter(function(row){return comparer(row,start)>=0&&comparer(row,end)<=0})}}}throw new Error("Column '"+columnName+"' is not found in the schema.")}}}function indexColEquals(columnIndex,val,_comparer){var valToCheck=val,comparer=_comparer;return{ops:"indexColEquals",type:OperatorTypes.IndexOpsFilter,_updateArgs:function _updateArgs(compareVal){valToCheck=compareVal},fn:function fn(_data,schema,config,generatorFn){var data=_data,loIndex,hiIndex;if(generatorFn){data=generatorFn.call()}if(!comparer){comparer=_getIndexColComparer(schema,columnIndex)}loIndex=leftMostExactOrGreater(valToCheck,data,comparer,0,data.length);if(loIndex>=data.length||comparer(data[loIndex],valToCheck)!==0){return{data:[],schema:schema,config:config}}hiIndex=rightMostExactOrLesser(valToCheck,data,comparer,loIndex,data.length);return{data:data,schema:schema,config:config,generatorFn:function generatorFn(){return data.slice(loIndex,hiIndex+1)}}}}}function equals(columnName,val){var valToCheck=val;return{ops:"equals",type:OperatorTypes.GenericFilter,_updateArgs:function _updateArgs(compareVal){valToCheck=compareVal},fn:function fn(_data,schema,config,generatorFn){var data=_data,columnIndex,comparer;if(generatorFn){data=generatorFn.call()}columnIndex=columnIndexOf(columnName,schema);if(columnIndex>=0){comparer=_getIndexColComparer(schema,columnIndex);if(config&&config.indexBy===columnName){var indexOps=indexColEquals(columnIndex,valToCheck,comparer);return indexOps.fn(data,schema,config)}return{data:data,schema:schema,config:config,generatorFn:function generatorFn(){return data.filter(function(row){return comparer(row,valToCheck)===0})}}}throw new Error("Column '"+columnName+"' is not found in the schema.")}}}function indexColLess(columnIndex,val,_comparer){var valToCheck=val,comparer=_comparer;return{ops:"indexColLess",type:OperatorTypes.IndexOpsFilter,_updateArgs:function _updateArgs(compareVal){valToCheck=compareVal},fn:function fn(_data,schema,config,generatorFn){var data=_data,pos;if(generatorFn){data=generatorFn.call()}if(!comparer){comparer=_getIndexColComparer(schema,columnIndex)}pos=leftMostExactOrGreater(valToCheck,data,comparer,0,data.length);return{data:data,schema:schema,config:config,generatorFn:function generatorFn(){return data.slice(0,pos)}}}}}function less(columnName,val){var valToCheck=val;return{ops:"less",type:OperatorTypes.GenericFilter,_updateArgs:function _updateArgs(compareVal){valToCheck=compareVal},fn:function fn(_data,schema,config,generatorFn){var data=_data,columnIndex,comparer;if(generatorFn){data=generatorFn.call()}columnIndex=columnIndexOf(columnName,schema);if(columnIndex>=0){comparer=_getIndexColComparer(schema,columnIndex);if(config&&config.indexBy===columnName){var indexOps=indexColLess(columnIndex,valToCheck,comparer);return indexOps.fn(data,schema,config)}return{data:data,schema:schema,config:config,generatorFn:function generatorFn(){return data.filter(function(row){return comparer(row,valToCheck)<0})}}}throw new Error("Column '"+columnName+"' is not found in the schema.")}}}function indexColLessEquals(columnIndex,val,_comparer){var valToCheck=val,comparer=_comparer;return{ops:"indexColLessEquals",type:OperatorTypes.IndexOpsFilter,_updateArgs:function _updateArgs(compareVal){valToCheck=compareVal},fn:function fn(_data,schema,config,generatorFn){var data=_data,pos;if(generatorFn){data=generatorFn.call()}if(!comparer){comparer=_getIndexColComparer(schema,columnIndex)}pos=rightMostExactOrLesser(valToCheck,data,comparer,0,data.length);return{data:data,schema:schema,config:config,generatorFn:function generatorFn(){return data.slice(0,pos+1)}}}}}function lessEquals(columnName,val){var valToCheck=val;return{ops:"lessEquals",type:OperatorTypes.GenericFilter,_updateArgs:function _updateArgs(compareVal){valToCheck=compareVal},fn:function fn(_data,schema,config,generatorFn){var data=_data,columnIndex,comparer;if(generatorFn){data=generatorFn.call()}columnIndex=columnIndexOf(columnName,schema);if(columnIndex>=0){comparer=_getIndexColComparer(schema,columnIndex);if(config&&config.indexBy===columnName){var indexOps=indexColLessEquals(columnIndex,valToCheck,comparer);return indexOps.fn(data,schema,config)}return{data:data,schema:schema,config:config,generatorFn:function generatorFn(){return data.filter(function(row){return comparer(row,valToCheck)<=0})}}}throw new Error("Column '"+columnName+"' is not found in the schema.")}}}function indexColGreater(columnIndex,val,_comparer){var valToCheck=val,comparer=_comparer;return{ops:"indexColGreater",type:OperatorTypes.IndexOpsFilter,_updateArgs:function _updateArgs(compareVal){valToCheck=compareVal},fn:function fn(_data,schema,config,generatorFn){var data=_data,pos,nullPos;if(generatorFn){data=generatorFn.call()}if(!comparer){comparer=_getIndexColComparer(schema,columnIndex)}pos=rightMostExactOrLesser(valToCheck,data,comparer,0,data.length);nullPos=leftMostExactOrGreater(null,data,comparer,pos,data.length);return{data:data,schema:schema,config:config,generatorFn:function generatorFn(){return data.slice(pos+1,nullPos)}}}}}function greater(columnName,val){var valToCheck=val;return{ops:"greater",type:OperatorTypes.GenericFilter,_updateArgs:function _updateArgs(compareVal){valToCheck=compareVal},fn:function fn(_data,schema,config,generatorFn){var data=_data,columnIndex,comparer;if(generatorFn){data=generatorFn.call()}columnIndex=columnIndexOf(columnName,schema);if(columnIndex>=0){comparer=_getIndexColComparer(schema,columnIndex);if(config&&config.indexBy===columnName){var indexOps=indexColGreater(columnIndex,valToCheck,comparer);return indexOps.fn(data,schema,config)}return{data:data,schema:schema,config:config,generatorFn:function generatorFn(){return data.filter(function(row){return row[columnIndex]!==null&&typeof row[columnIndex]!=="undefined"&&comparer(row,valToCheck)>0})}}}throw new Error("Column '"+columnName+"' is not found in the schema.")}}}function indexColGreaterEquals(columnIndex,val,_comparer){var valToCheck=val,comparer=_comparer;return{ops:"indexColGreaterEquals",type:OperatorTypes.IndexOpsFilter,_updateArgs:function _updateArgs(compareVal){valToCheck=compareVal},fn:function fn(_data,schema,config,generatorFn){var data=_data,pos,nullPos;if(generatorFn){data=generatorFn.call()}if(!comparer){comparer=_getIndexColComparer(schema,columnIndex)}pos=leftMostExactOrGreater(valToCheck,data,comparer,0,data.length);nullPos=leftMostExactOrGreater(null,data,comparer,pos,data.length);return{data:data,schema:schema,config:config,generatorFn:function generatorFn(){return data.slice(pos,nullPos)}}}}}function greaterEquals(columnName,val){var valToCheck=val;return{ops:"greaterEquals",type:OperatorTypes.GenericFilter,_updateArgs:function _updateArgs(compareVal){valToCheck=compareVal},fn:function fn(_data,schema,config,generatorFn){var data=_data,columnIndex,comparer;if(generatorFn){data=generatorFn.call()}columnIndex=columnIndexOf(columnName,schema);if(columnIndex>=0){comparer=_getIndexColComparer(schema,columnIndex);if(config&&config.indexBy===columnName){var indexOps=indexColGreaterEquals(columnIndex,valToCheck,comparer);return indexOps.fn(data,schema,config)}return{data:data,schema:schema,config:config,generatorFn:function generatorFn(){return data.filter(function(row){return row[columnIndex]!==null&&typeof row[columnIndex]!=="undefined"&&comparer(row,valToCheck)>=0})}}}throw new Error("Column '"+columnName+"' is not found in the schema.")}}}var _getIndexColComparer=function _getIndexColComparer(schema,columnIndex){switch(schema[columnIndex].type){case"interval":return function(a,b){return numberComparator(a[columnIndex].start,b)};case"number":case"date":return function(a,b){return numberComparator(a[columnIndex],b)};default:return function(a,b){return stringComparator(String(a[columnIndex]).toLowerCase(),String(b).toLowerCase())}}};export{indexColBetween,between,indexColEquals,equals,indexColLess,less,indexColLessEquals,lessEquals,indexColGreater,greater,indexColGreaterEquals,greaterEquals};