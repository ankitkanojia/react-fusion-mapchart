import _inheritsLoose from"@babel/runtime/helpers/inheritsLoose";import MSCombi3D from"../mscombi3d";import Column3DDataset from"../../dataset/column3d";import LineDataset from"../../dataset/line";import CartesianStackGroup from"../../dataset/groups/cartesian-stack";var CHART_STR="Stacked 3D Column and Line Chart";var UNDEF;var StackedColumn3DLine=function(_MSCombi3D){_inheritsLoose(StackedColumn3DLine,_MSCombi3D);function StackedColumn3DLine(){return _MSCombi3D.apply(this,arguments)||this}StackedColumn3DLine.getName=function getName(){return"StackedColumn3DLine"};var _proto=StackedColumn3DLine.prototype;_proto.getName=function getName(){return"StackedColumn3DLine"};_proto.__setDefaultConfig=function __setDefaultConfig(){_MSCombi3D.prototype.__setDefaultConfig.call(this);var config=this.config;config.is3D=true;config.friendlyName=CHART_STR;config.use3dlineshift=1;config.isstacked=true;config.stack100percent=0;config.showplotborder=0;config.enablemousetracking=true};_proto.getDSdef=function getDSdef(name){return name==="line"?LineDataset:Column3DDataset};_proto.getDSGroupdef=function getDSGroupdef(name){return name==="column"?CartesianStackGroup:UNDEF};_proto.getDSType=function getDSType(name){return name&&name.toLowerCase()==="line"?"line":"column"};return StackedColumn3DLine}(MSCombi3D);export default StackedColumn3DLine;