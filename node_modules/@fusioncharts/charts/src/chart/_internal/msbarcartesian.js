import _inheritsLoose from"@babel/runtime/helpers/inheritsLoose";import MSCartesian from"./mscartesian";import Bar2DDataset from"../../dataset/column";import{chartPaletteStr,pluckFontSize,pluck,pluckNumber,preDefStr}from"@fusioncharts/core/src/lib";import isEqualString from"@fusioncharts/utils/src/string/equal";function __feedAxesRawData(){var iapi=this,chartConfig=iapi.config,colorM=iapi.getFromEnv("color-manager"),dataObj=iapi.getFromEnv("dataSource"),chartAttrs=dataObj.chart,xAxisConf,yAxisConf,is3D=iapi.config.is3D,palleteString=is3D?chartPaletteStr.chart3D:chartPaletteStr.chart2D;xAxisConf={isVertical:true,isReverse:false,isOpposit:isEqualString(chartAttrs.xaxisposition,"right"),outCanfontFamily:pluck(chartAttrs.outcnvbasefont,chartAttrs.basefont,"Verdana,sans"),outCanfontSize:pluckFontSize(chartAttrs.outcnvbasefontsize,chartAttrs.basefontsize,10),outCancolor:pluck(chartAttrs.outcnvbasefontcolor,chartAttrs.basefontcolor,colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/gi,"#$1"),axisNamePadding:chartAttrs.xaxisnamepadding,maxLabelWidthPercent:chartAttrs.maxlabelwidthpercent,minLabelWidthPercent:chartAttrs.minlabelwidthpercent,axisValuePadding:chartAttrs.labelpadding,axisNameFont:chartAttrs.xaxisnamefont,axisNameFontSize:chartAttrs.xaxisnamefontsize,axisNameFontColor:chartAttrs.xaxisnamefontcolor,axisNameFontBold:chartAttrs.xaxisnamefontbold,axisNameFontItalic:chartAttrs.xaxisnamefontitalic,axisNameBgColor:chartAttrs.xaxisnamebgcolor,axisNameBorderColor:chartAttrs.xaxisnamebordercolor,axisNameAlpha:chartAttrs.xaxisnamealpha,axisNameFontAlpha:chartAttrs.xaxisnamefontalpha,axisNameBgAlpha:chartAttrs.xaxisnamebgalpha,axisNameBorderAlpha:chartAttrs.xaxisnameborderalpha,axisNameBorderPadding:chartAttrs.xaxisnameborderpadding,axisNameBorderRadius:chartAttrs.xaxisnameborderradius,axisNameBorderThickness:chartAttrs.xaxisnameborderthickness,axisNameBorderDashed:chartAttrs.xaxisnameborderdashed,axisNameBorderDashLen:chartAttrs.xaxisnameborderdashlen,axisNameBorderDashGap:chartAttrs.xaxisnameborderdashgap,axisNameWidth:chartAttrs.xaxisnamewidth,useEllipsesWhenOverflow:chartAttrs.useellipseswhenoverflow,divLineColor:pluck(chartAttrs.vdivlinecolor,chartAttrs.divlinecolor,colorM.getColor(palleteString.divLineColor)),divLineAlpha:pluck(chartAttrs.vdivlinealpha,chartAttrs.divlinealpha,is3D?colorM.getColor("divLineAlpha3D"):colorM.getColor("divLineAlpha")),divLineThickness:pluckNumber(chartAttrs.vdivlinethickness,chartAttrs.divlinethickness,1),divLineIsDashed:Boolean(pluckNumber(chartAttrs.vdivlinedashed,chartAttrs.vdivlineisdashed,chartAttrs.divlinedashed,chartAttrs.divlineisdashed,0)),divLineDashLen:pluckNumber(chartAttrs.vdivlinedashlen,chartAttrs.divlinedashlen,4),divLineDashGap:pluckNumber(chartAttrs.vdivlinedashgap,chartAttrs.divlinedashgap,2),showAlternateGridColor:0,alternateGridColor:pluck(chartAttrs.alternatehgridcolor,colorM.getColor("altHGridColor")),alternateGridAlpha:pluck(chartAttrs.alternatehgridalpha,colorM.getColor("altHGridAlpha")),numDivLines:chartAttrs.numvdivlines,labelFont:chartAttrs.labelfont,labelFontSize:chartAttrs.labelfontsize,labelFontColor:chartAttrs.labelfontcolor,labelAlpha:chartAttrs.labelalpha,labelFontBold:chartAttrs.labelfontbold,labelFontItalic:chartAttrs.labelfontitalic,labelBdrColor:chartAttrs.labelbordercolor,labelBdrAlpha:chartAttrs.labelborderalpha,labelLink:chartAttrs.labellink,labelBgColor:chartAttrs.labelbgcolor,labelBgAlpha:chartAttrs.labelbgalpha,labelBdrThickness:chartAttrs.labelborderthickness,labelBdrPadding:chartAttrs.labelborderpadding,labelBdrRadius:chartAttrs.labelborderradius,labelBdrDashed:chartAttrs.labelborderdashed,labelBdrDashLen:chartAttrs.labelborderdashlen,labelBdrDashGap:chartAttrs.labelborderdashgap,axisName:chartAttrs.xaxisname,axisMinValue:chartAttrs.xaxisminvalue,axisMaxValue:chartAttrs.xaxismaxvalue,setAdaptiveMin:chartAttrs.setadaptivexmin,adjustDiv:chartAttrs.adjustvdiv,labelDisplay:chartAttrs.labeldisplay,showLabels:chartAttrs.showlabels,rotateLabels:chartAttrs.rotatelabels,slantLabel:pluckNumber(chartAttrs.slantlabels,chartAttrs.slantlabel),labelStep:pluckNumber(chartAttrs.labelstep,chartAttrs.xaxisvaluesstep),showAxisValues:pluckNumber(chartAttrs.showxaxisvalues,chartAttrs.showxaxisvalue),showLimits:chartAttrs.showvlimits,showDivLineValues:pluckNumber(chartAttrs.showvdivlinevalues,chartAttrs.showvdivlinevalues),zeroPlaneColor:chartAttrs.vzeroplanecolor,zeroPlaneThickness:pluckNumber(chartAttrs.vzeroplanethickness,chartAttrs.vdivlinethickness,2),zeroPlaneAlpha:pluckNumber(chartAttrs.vzeroplanealpha,chartAttrs.vdivlinealpha,chartConfig.zeroplanealpha),showZeroPlaneValue:chartAttrs.showvzeroplanevalue,trendlineColor:chartAttrs.trendlinecolor,trendlineToolText:chartAttrs.trendlinetooltext,trendlineThickness:chartAttrs.trendlinethickness,rotateAxisName:pluckNumber(chartAttrs.rotatexaxisname,1),trendlineAlpha:chartAttrs.trendlinealpha,showTrendlinesOnTop:chartAttrs.showtrendlinesontop,showAxisLine:is3D?0:pluckNumber(chartAttrs.showxaxisline,chartAttrs.showaxislines,chartAttrs.drawAxisLines,0),axisLineThickness:pluckNumber(chartAttrs.xaxislinethickness,chartAttrs.axislinethickness,1),axisLineAlpha:pluckNumber(chartAttrs.xaxislinealpha,chartAttrs.axislinealpha,100),axisLineColor:pluck(chartAttrs.xaxislinecolor,chartAttrs.axislinecolor,"#000000")};yAxisConf={isVertical:false,isReverse:false,isOpposit:isEqualString(chartAttrs.yaxisposition,"top"),outCanfontFamily:pluck(chartAttrs.outcnvbasefont,chartAttrs.basefont,"Verdana,sans"),outCanfontSize:pluckFontSize(chartAttrs.outcnvbasefontsize,chartAttrs.basefontsize,10),outCancolor:pluck(chartAttrs.outcnvbasefontcolor,chartAttrs.basefontcolor,colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/gi,"#$1"),axisNamePadding:chartAttrs.yaxisnamepadding,axisValuePadding:chartAttrs.yaxisvaluespadding,axisNameFont:chartAttrs.yaxisnamefont,axisNameFontSize:chartAttrs.yaxisnamefontsize,axisNameFontColor:chartAttrs.yaxisnamefontcolor,axisNameFontBold:chartAttrs.yaxisnamefontbold,axisNameFontItalic:chartAttrs.yaxisnamefontitalic,axisNameBgColor:chartAttrs.yaxisnamebgcolor,axisNameBorderColor:chartAttrs.yaxisnamebordercolor,axisNameAlpha:chartAttrs.yaxisnamealpha,axisNameFontAlpha:chartAttrs.yaxisnamefontalpha,axisNameBgAlpha:chartAttrs.yaxisnamebgalpha,axisNameBorderAlpha:chartAttrs.yaxisnameborderalpha,axisNameBorderPadding:chartAttrs.yaxisnameborderpadding,axisNameBorderRadius:chartAttrs.yaxisnameborderradius,axisNameBorderThickness:chartAttrs.yaxisnameborderthickness,axisNameBorderDashed:chartAttrs.yaxisnameborderdashed,axisNameBorderDashLen:chartAttrs.yaxisnameborderdashlen,axisNameBorderDashGap:chartAttrs.yaxisnameborderdashgap,axisNameWidth:chartAttrs.yaxisnamewidth,useEllipsesWhenOverflow:chartAttrs.useellipseswhenoverflow,axisName:chartAttrs.yaxisname,divLineColor:pluck(chartAttrs.divlinecolor,colorM.getColor(palleteString.divLineColor)),divLineAlpha:pluck(chartAttrs.divlinealpha,is3D?colorM.getColor("divLineAlpha3D"):colorM.getColor("divLineAlpha")),divLineThickness:pluckNumber(chartAttrs.divlinethickness,1),divLineIsDashed:Boolean(pluckNumber(chartAttrs.divlinedashed,chartAttrs.divlineisdashed,0)),divLineDashLen:pluckNumber(chartAttrs.divlinedashlen,4),divLineDashGap:pluckNumber(chartAttrs.divlinedashgap,2),showAlternateGridColor:pluckNumber(chartAttrs.showalternatevgridcolor,1),alternateGridColor:pluck(chartAttrs.alternatevgridcolor,colorM.getColor("altVGridColor")),alternateGridAlpha:pluck(chartAttrs.alternatevgridalpha,colorM.getColor("altVGridAlpha")),numDivLines:chartAttrs.numdivlines,axisMinValue:chartAttrs.yaxisminvalue,axisMaxValue:chartAttrs.yaxismaxvalue,setAdaptiveMin:chartAttrs.setadaptiveymin,adjustDiv:chartAttrs.adjustdiv,labelStep:chartAttrs.yaxisvaluesstep,showAxisValues:pluckNumber(chartAttrs.showyaxisvalues,chartAttrs.showyaxisvalue),showLimits:pluckNumber(chartAttrs.showyaxislimits,chartAttrs.showlimits,iapi.showLimits),showDivLineValues:pluckNumber(chartAttrs.showdivlinevalues,chartAttrs.showdivlinevalue),zeroPlaneColor:chartAttrs.zeroplanecolor,zeroPlaneThickness:pluckNumber(chartAttrs.zeroplanethickness,chartAttrs.divlinethickness,2),zeroPlaneAlpha:pluckNumber(chartAttrs.zeroplanealpha,chartAttrs.divlinealpha,chartConfig.zeroplanealpha),showZeroPlaneValue:chartAttrs.showzeroplanevalue,trendlineColor:chartAttrs.trendlinecolor,trendlineToolText:chartAttrs.trendlinetooltext,trendlineThickness:chartAttrs.trendlinethickness,trendlineAlpha:chartAttrs.trendlinealpha,isTrendZone:0,showTrendlinesOnTop:chartAttrs.showtrendlinesontop,showAxisLine:is3D?0:pluckNumber(chartAttrs.showyaxisline,chartAttrs.showaxislines,chartAttrs.drawAxisLines,0),axisLineThickness:pluckNumber(chartAttrs.yaxislinethickness,chartAttrs.axislinethickness,1),axisLineAlpha:pluckNumber(chartAttrs.yaxislinealpha,chartAttrs.axislinealpha,100),axisLineColor:pluck(chartAttrs.yaxislinecolor,chartAttrs.axislinecolor,"#000000"),numberFormatterFn:"yAxis",showZeroPlaneOnTop:chartConfig.showzeroplaneontop,forceTrendBelow:!!chartConfig.is3D,labelFont:chartAttrs.yaxisvaluefont,labelFontSize:chartAttrs.yaxisvaluefontsize,labelFontColor:chartAttrs.yaxisvaluefontcolor,labelAlpha:chartAttrs.yaxisvaluealpha,labelFontBold:chartAttrs.yaxisvaluefontbold,labelFontItalic:chartAttrs.yaxisvaluefontitalic,labelBdrColor:chartAttrs.yaxisvaluebordercolor,labelBdrAlpha:chartAttrs.yaxisvalueborderalpha,labelBgAlpha:chartAttrs.yaxisvaluebgalpha,labelLink:chartAttrs.yaxisvaluelink,labelBgColor:chartAttrs.yaxisvaluebgcolor,labelBdrThickness:chartAttrs.yaxisvalueborderthickness,labelBdrPadding:chartAttrs.yaxisvalueborderpadding,labelBdrRadius:chartAttrs.yaxisvalueborderradius,labelBdrDashed:chartAttrs.yaxisvalueborderdashed,labelBdrDashLen:chartAttrs.yaxisvalueborderdashlen,labelBdrDashGap:chartAttrs.yaxisvalueborderdashgap};yAxisConf.vtrendlines=dataObj.trendlines;xAxisConf.trendlines=dataObj.vtrendlines;if(chartConfig.isstacked){yAxisConf.isPercent=pluckNumber(chartConfig.stack100percent,0)}return{xAxisConf:[xAxisConf],yAxisConf:[yAxisConf]}}function __spaceManager(){var availableWidth,availableHeight,iapi=this,config=iapi.config,children=iapi.getChildren(),xAxis=children.yAxis&&children.yAxis[0],yAxisArr=children.xAxis&&children.xAxis||[],yAxis,POSITION_BOTTOM=preDefStr.POSITION_BOTTOM,legendPosition=config.legendposition,xDepth=config.xDepth,yDepth=config.yDepth,canvas=children.canvas[0],canvasBgDepth=config.canvasBgDepth,canvasBaseDepth=config.canvasBaseDepth,canvasBasePadding=config.canvasBasePadding,canvasBorderWidth=children.canvas[0].config.canvasBorderWidth,showRTValue=config.realTimeConfig&&config.realTimeConfig.showRTValue,chartBorderWidth=config.borderWidth,canvasMarginTop=config.canvasMarginTop,canvasMarginBottom=config.canvasMarginBottom,canvasMarginLeft=config.canvasMarginLeft,canvasMarginRight=config.canvasMarginRight,minCanvasHeight=config.minCanvasHeight,minCanvasWidth=config.minCanvasWidth,minChartWidth=config.minChartWidth,minChartHeight=config.minChartHeight,height=config.height,width=config.width,diff,heightAdjust=false,widthAdjust=false,top,bottom,left,right,currentCanvasHeight,currentCanvasWidth,origCanvasTopMargin=config.origCanvasTopMargin,origCanvasBottomMargin=config.origCanvasBottomMargin,origCanvasLeftMargin=config.origCanvasLeftMargin,origCanvasRightMargin=config.origCanvasRightMargin,chartBorderHorizontal,chartBorderVertical,canvasBorderHorizontal,actionBarSpace,spaceForActionBar,canvasBorderVertical,yAxisSpaceAllocation,xAxisSpaceAllocation,sum;if(config.canvasWidth-2*chartBorderWidth<minChartWidth){chartBorderVertical=(config.canvasWidth-minChartWidth)/2}if(config.canvasHeight-2*chartBorderWidth<minChartHeight){chartBorderHorizontal=(config.canvasHeight-minChartHeight)/2}iapi._allocateSpace({top:chartBorderHorizontal||chartBorderWidth,bottom:chartBorderHorizontal||chartBorderWidth,left:chartBorderVertical||chartBorderWidth,right:chartBorderVertical||chartBorderWidth});yAxis=yAxisArr[0];availableWidth=config.availableWidth*.7;config.yAxisSpaceAllocation=yAxisSpaceAllocation=yAxis&&yAxis.placeAxis(availableWidth);yAxis&&iapi._allocateSpace(yAxisSpaceAllocation);spaceForActionBar=config.availableHeight*.225;actionBarSpace=iapi._manageActionBarSpace&&iapi._manageActionBarSpace(spaceForActionBar)||{};iapi._allocateSpace(actionBarSpace);iapi._manageLegendSpace&&iapi._manageLegendSpace();availableHeight=legendPosition===POSITION_BOTTOM?config.availableHeight*.6:config.availableWidth*.6;if(yDepth){iapi._allocateSpace({left:yDepth});config.shift=xDepth+canvasBasePadding+canvasBaseDepth}if(canvasBgDepth){iapi._allocateSpace({top:canvasBgDepth})}if(config.canvasWidth-2*canvasBorderWidth<minCanvasWidth){canvasBorderVertical=(config.canvasWidth-minCanvasWidth)/2}iapi._allocateSpace({left:canvasBorderVertical||canvasBorderWidth,right:canvasBorderVertical||canvasBorderWidth});if(minCanvasWidth>width-canvasMarginLeft-canvasMarginRight){widthAdjust=true;diff=config.canvasWidth-minCanvasWidth;sum=canvasMarginLeft+canvasMarginRight;canvasMarginLeft=config.canvasMarginLeft=diff*canvasMarginLeft/sum;canvasMarginRight=config.canvasMarginRight=diff*canvasMarginRight/sum}left=canvasMarginLeft>config.canvasLeft?canvasMarginLeft-config.canvasLeft:0;right=canvasMarginRight>width-config.canvasRight?canvasMarginRight+config.canvasRight-width:0;iapi._allocateSpace({left:left,right:right});iapi._allocateSpace({left:canvasBaseDepth});if(widthAdjust){sum=origCanvasLeftMargin+origCanvasRightMargin;currentCanvasWidth=config.canvasWidth;if(currentCanvasWidth>minCanvasWidth){diff=currentCanvasWidth-minCanvasWidth;left=diff*origCanvasLeftMargin/sum;right=diff*origCanvasRightMargin/sum}iapi._allocateSpace({left:left,right:right})}config.actualCanvasMarginRight=right;config.actualCanvasMarginBottom=bottom;iapi._manageChartMenuBar(availableHeight);availableHeight=config.availableHeight*.2;config.sumValueSpace=iapi._getSumValueSpace(availableHeight);iapi._allocateSpace(config.sumValueSpace);availableHeight=config.availableHeight*.3;if(config.realtimeEnabled){if(showRTValue){iapi._allocateSpace(iapi._realTimeValuePositioning(availableHeight))}else{iapi._hideRealTimeValue()}}availableHeight=config.availableHeight*.6;config.xAxisSpaceAllocation=xAxisSpaceAllocation=xAxis&&xAxis.placeAxis(availableHeight);xAxis&&iapi._allocateSpace(xAxisSpaceAllocation);availableHeight=config.availableHeight*.3;iapi._manageScrollbarPosition&&iapi._manageScrollbarPosition(availableHeight);if(config.canvasHeight-2*canvasBorderWidth<minCanvasHeight){canvasBorderHorizontal=(config.canvasHeight-minCanvasHeight)/2}iapi._allocateSpace({top:canvasBorderHorizontal||canvasBorderWidth,bottom:canvasBorderHorizontal||canvasBorderWidth});if(minCanvasHeight>height-canvasMarginTop-canvasMarginBottom){heightAdjust=true;diff=config.canvasHeight-minCanvasHeight;sum=canvasMarginTop+canvasMarginBottom;canvasMarginTop=config.canvasMarginTop=diff*canvasMarginTop/sum;canvasMarginBottom=config.canvasMarginBottom=diff*canvasMarginBottom/sum}top=canvasMarginTop>config.canvasTop?canvasMarginTop-config.canvasTop:0;bottom=canvasMarginBottom>height-config.canvasBottom?canvasMarginBottom+config.canvasBottom-height:0;iapi._allocateSpace({top:top,bottom:bottom});if(heightAdjust){sum=origCanvasTopMargin+origCanvasBottomMargin;currentCanvasHeight=config.canvasHeight;if(currentCanvasHeight>minCanvasHeight){diff=currentCanvasHeight-minCanvasHeight;top=diff*origCanvasTopMargin/sum;bottom=diff*origCanvasBottomMargin/sum}iapi._allocateSpace({top:top,bottom:bottom})}config.actualCanvasMarginTop=top;config.actualCanvasMarginLeft=left;canvas.setDimension({top:config.canvasTop,left:config.canvasLeft,width:config.canvasWidth,height:config.canvasHeight})}function __postSpaceManagement(){var iapi=this,config=iapi.config,children=iapi.getChildren(),xAxis=children.xAxis&&children.xAxis[0],yAxis=children.yAxis&&children.yAxis[0],legend=children.legend&&children.legend[0],xDepth=config.xDepth||0,canvasConfig=children.canvas[0].config,canvasBorderWidth=canvasConfig.canvasBorderWidth,canvasPadding=canvasConfig.canvasPadding,canvasPaddingLeft,canvasPaddingRight,canvasPaddingTop,canvasPaddingBottom,canvasTop=canvasConfig.canvasTop,canvasLeft=canvasConfig.canvasLeft,axisTop=canvasTop-canvasBorderWidth,axisBottom=canvasTop+canvasConfig.canvasHeight+canvasBorderWidth,axisLeft=canvasLeft-(config.shift||0)-canvasBorderWidth,axisRight=canvasLeft+canvasConfig.canvasWidth+canvasBorderWidth+config.sumValueSpace.right;yAxis&&iapi._allocateXAxisLabelSpace(yAxis);canvasPaddingLeft=canvasConfig.canvasPaddingLeft;canvasPaddingRight=canvasConfig.canvasPaddingRight;canvasPaddingTop=canvasConfig.canvasPaddingTop;canvasPaddingBottom=canvasConfig.canvasPaddingBottom;yAxis&&yAxis.setAxisDimention({x:canvasConfig.canvasLeft+canvasPaddingLeft,y:yAxis.config.isOpposit?axisTop:axisBottom,opposite:yAxis.config.isOpposit?axisBottom:axisTop,axisLength:canvasConfig.canvasWidth-canvasPaddingLeft-canvasPaddingRight});xAxis&&xAxis.setAxisDimention({x:xAxis.config.isOpposit?axisRight:axisLeft,y:canvasTop+xDepth+Math.max(canvasPaddingTop,canvasPadding),opposite:xAxis.config.isOpposit?axisLeft:axisRight,axisLength:canvasConfig.canvasHeight-xDepth-Math.max(canvasPaddingTop,canvasPadding)-Math.max(canvasPaddingBottom,canvasPadding)});legend&&legend.postSpaceManager();iapi.allocateDimensionOfChartMenuBar()}var MSBarCartesian=function(_MSCartesian){_inheritsLoose(MSBarCartesian,_MSCartesian);function MSBarCartesian(){return _MSCartesian.apply(this,arguments)||this}var _proto=MSBarCartesian.prototype;_proto.getName=function getName(){return"MSBarCartesian"};MSBarCartesian.getName=function getName(){return"MSBarCartesian"};_proto.__setDefaultConfig=function __setDefaultConfig(){_MSCartesian.prototype.__setDefaultConfig.call(this);this.config.enablemousetracking=true};_proto._feedAxesRawData=function _feedAxesRawData(){return __feedAxesRawData.call(this)};_proto._spaceManager=function _spaceManager(){__spaceManager.call(this)};_proto._postSpaceManagement=function _postSpaceManagement(){__postSpaceManagement.call(this)};_proto.getDSdef=function getDSdef(){return Bar2DDataset};_proto.getDSGroupdef=function getDSGroupdef(){};return MSBarCartesian}(MSCartesian);export{__feedAxesRawData,__spaceManager,__postSpaceManagement};export default MSBarCartesian;