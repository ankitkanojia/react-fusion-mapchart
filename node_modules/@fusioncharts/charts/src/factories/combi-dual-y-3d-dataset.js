import Column3dGroup from"../dataset/groups/column3d";import{pluck,componentFactory,datasetFactory}from"@fusioncharts/core/src/lib";import{removeComponents}from"./dataset.helper";var MULTISERIESCOLUMNMANAGER="multiseriesColumnManager",MULTISERIESCOLUMNMANAGER3D="multiseriesColumnManager3D";export default function(chart){var jsonData=chart.getFromEnv("dataSource"),datasetsJSON=jsonData.dataset,children=chart.getChildren(),canvas=children.canvas[0],vCanvasArr=canvas.getChildren("vCanvas"),vCanvas=vCanvasArr[0],svCanvas=vCanvasArr[1],datasetJSON,isdual=chart.getFromEnv("chartConfig").isdual,i,canvasDatasetsDef={vCanvasDatasetsDef0:{},vCanvasDatasetsDef1:{}},manager3D,datasetsDef,datasetDef,DsGroupClass,dsType,parentyaxis,relatedVCanvas,relatedPrevDatasetMap,prevDatasetMap={vCanvas0:{},vCanvas1:{}};if(!datasetsJSON){chart.setChartMessage()}for(i=0;i<datasetsJSON.length;i++){datasetJSON=datasetsJSON[i];parentyaxis=datasetJSON.parentyaxis||"";if(parentyaxis.toLowerCase()==="s"&&isdual){dsType=pluck(datasetJSON.renderas,chart.config.sDefaultDatasetType);relatedVCanvas=svCanvas;relatedPrevDatasetMap=prevDatasetMap.vCanvas1;datasetsDef=canvasDatasetsDef.vCanvasDatasetsDef1}else{dsType=pluck(datasetJSON.renderas,chart.config.defaultDatasetType);relatedVCanvas=vCanvas;relatedPrevDatasetMap=prevDatasetMap.vCanvas0;datasetsDef=canvasDatasetsDef.vCanvasDatasetsDef0}dsType=chart.getDSType(dsType,parentyaxis.toLowerCase()==="s");DsGroupClass=chart.getDSGroupdef(dsType,parentyaxis);if(DsGroupClass){componentFactory(relatedVCanvas,Column3dGroup,MULTISERIESCOLUMNMANAGER3D);manager3D=relatedVCanvas.getChildren(MULTISERIESCOLUMNMANAGER3D)[0];relatedPrevDatasetMap[manager3D.getName()]=true;componentFactory(manager3D,DsGroupClass,MULTISERIESCOLUMNMANAGER);relatedPrevDatasetMap[DsGroupClass.getName().toLowerCase()]=true}relatedPrevDatasetMap[dsType.toLowerCase()]=true;if(datasetsDef[dsType]){datasetsDef[dsType].conf.push(datasetJSON);datasetsDef[dsType].indices.push(i)}else{datasetsDef[dsType]={};datasetsDef[dsType].indices=[i];datasetsDef[dsType].classDef=chart.getDSdef(dsType);datasetsDef[dsType].conf=[datasetJSON];datasetsDef[dsType].pYAxis=parentyaxis.toLowerCase();datasetsDef[dsType].parent=DsGroupClass?manager3D.getChildren(MULTISERIESCOLUMNMANAGER)[0]:relatedVCanvas}}for(var key in canvasDatasetsDef){if(canvasDatasetsDef.hasOwnProperty(key)){datasetsDef=canvasDatasetsDef[key];for(dsType in datasetsDef){if(datasetsDef.hasOwnProperty(dsType)){datasetDef=datasetsDef[dsType];if(datasetDef.parent.getType()==="group"){datasetDef.parent.configure(datasetDef.conf)}datasetFactory(datasetDef.parent,datasetDef.classDef,"dataset_"+dsType,datasetDef.conf.length,datasetDef.conf,datasetDef.indices)}}}}removeComponents(vCanvasArr[0],Object.keys(prevDatasetMap.vCanvas0));removeComponents(vCanvasArr[1],Object.keys(prevDatasetMap.vCanvas1))}