import expander from"./axis";import DataStore from"../../../../../../fc-datatable/src/index";var dataStore=new DataStore([["USA",200,"1970-01-01","1971-01-01"],["India",150,"1985-12-21","1972-12-21"]],[{name:"Origin",type:"text"},{name:"Horsepower",type:"number"},{name:"OriginDate",type:"date",format:"%Y-%m-%d"},{name:"EndDate",type:"date",format:"%Y-%m-%d"}]),dt=dataStore.getDataTable(),isDate=function isDate(scheme){return scheme.type==="date"||scheme.type==="interval"},isNumber=function isNumber(scheme){return scheme.type==="number"},isText=function isText(scheme){return scheme.type==="text"};describe("Axis expander",function(){it("uses the provided filter to choose default columns",function(){expect(expander(dt,isDate)).toEqual([{columnname:[{columnname:"OriginDate"}]},{columnname:[{columnname:"EndDate"}]}]);expect(expander(dt,isNumber)).toEqual([{columnname:[{columnname:"Horsepower"}]}]);expect(expander(dt,isText)).toEqual([{columnname:[{columnname:"Origin"}]}]);expect(expander(dt)).toEqual([{columnname:[{columnname:"Origin"}]},{columnname:[{columnname:"Horsepower"}]},{columnname:[{columnname:"OriginDate"}]},{columnname:[{columnname:"EndDate"}]}])});describe("creates default configurations when the input is",function(){var dateExpect={filter:isDate,output:[{columnname:[{columnname:"OriginDate"}]},{columnname:[{columnname:"EndDate"}]}]};it("undefined",function(){expect(expander(dt,dateExpect.filter)).toEqual(dateExpect.output)});it("null",function(){expect(expander(dt,dateExpect.filter,null)).toEqual(dateExpect.output)});it("an empty string",function(){expect(expander(dt,dateExpect.filter,"")).toEqual(dateExpect.output)});it("an empty string",function(){expect(expander(dt,dateExpect.filter,"")).toEqual(dateExpect.output)});it("non-existent in the input table",function(){expect(expander(dt,dateExpect.filter,"x")).toEqual(dateExpect.output);expect(expander(dt,dateExpect.filter,{columnname:"x"})).toEqual(dateExpect.output)});it("non-existent in the input table",function(){expect(expander(dt,dateExpect.filter,"x")).toEqual(dateExpect.output);expect(expander(dt,dateExpect.filter,{columnname:"x"})).toEqual(dateExpect.output)});describe("an empty array with",function(){it("nothing in it",function(){expect(expander(dt,dateExpect.filter,[])).toEqual(dateExpect.output)});it("invalid object(s) in it",function(){expect(expander(dt,dateExpect.filter,[{}])).toEqual(dateExpect.output);expect(expander(dt,dateExpect.filter,[{columnname:"as"},{columnname:"cv"}])).toEqual(dateExpect.output)});it("invalid string(s) in it",function(){expect(expander(dt,dateExpect.filter,["as"])).toEqual(dateExpect.output);expect(expander(dt,dateExpect.filter,["as","df"])).toEqual(dateExpect.output)})})});it("exactly match the input if the input is expanded fully",function(){var dateExpect={filter:isDate,output:[{columnname:[{columnname:"OriginDate",title:"Yep"}]},{columnname:[{columnname:"EndDate"}],whatever:"should work"}]};expect(expander(dt,dateExpect.filter,dateExpect.output)).toEqual(dateExpect.output)});describe("should create configurations with valid column name properties",function(){var textExpect={filter:isText,output:[{columnname:[{columnname:"Origin"}]}]};it("when input is a string",function(){expect(expander(dt,textExpect.filter,"Original")).toEqual(textExpect.output)});it("when input is an object",function(){expect(expander(dt,textExpect.filter,{columnname:"Original"})).toEqual(textExpect.output)});it("when input is an array",function(){expect(expander(dt,textExpect.filter,{columnname:[{columnname:"Original"}]})).toEqual(textExpect.output)})});it("should not change the case of any keys is the input",function(){var textExpect={filter:isText,input:{columnname:"Origin",stYle:{}},output:[{columnname:[{columnname:"Origin"}],stYle:{}}]},expandedConfig=expander(dt,textExpect.filter,textExpect.input);expect(expandedConfig).toEqual(textExpect.output)})});