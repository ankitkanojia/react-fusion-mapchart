import unique from"ramda/es/uniq";import arrayHasContent from"@fusioncharts/utils/src/type/array-has-content";import stringHasContent from"@fusioncharts/utils/src/type/string-has-content";import isObject from"@fusioncharts/utils/src/type/is-object";import isArray from"@fusioncharts/utils/src/type/is-array";import isString from"@fusioncharts/utils/src/type/is-string";var VALID_PLOT_TYPES=["column","line","step-line","smooth-line","area","step-area","smooth-area","candlestick","ohlc"];var UNDEF,truthFn=function truthFn(){return true},sanitisePlotType=function sanitisePlotType(plotType,setDefault){if(plotType===void 0){plotType=""}if(setDefault===void 0){setDefault=true}if(VALID_PLOT_TYPES.includes(plotType)){return plotType}else if(setDefault){return"line"}},objectHasContent=function objectHasContent(param){return isObject(param)&&(stringHasContent(param.plot)||arrayHasContent(param.plot)||isObject(param.plot))},stringExpando=function stringExpando(str,stringValidator,mergingInfo){if(mergingInfo===void 0){mergingInfo={}}var outputArr=[];if(stringHasContent(str)&&stringValidator(str)){var mergedPlot=isObject(mergingInfo.plot)?Object.assign({},mergingInfo.plot):{};mergedPlot.type=sanitisePlotType(mergedPlot.type||mergingInfo.plottype);mergedPlot.value=str;mergedPlot.aggregation=mergedPlot.aggregation||mergingInfo.aggregation||"avg";outputArr.push(Object.assign({},mergingInfo,{plot:[mergedPlot]}))}return outputArr},sanitiseObj=function sanitiseObj(obj,validator){var type=sanitisePlotType(obj.type),isOHLC=type==="candlestick"||type==="ohlc",sanitisedName=function sanitisedName(str){return validator(str)?str:UNDEF};var value,validatedObj={},open,close,high,low;if(isObject(obj.value)){value=sanitisedName(obj.value.value)}else{value=sanitisedName(obj.value)}if(isOHLC){if(isObject(obj.value)){open=sanitisedName(obj.value.open);close=sanitisedName(obj.value.close);high=sanitisedName(obj.value.high);low=sanitisedName(obj.value.low)}if(open&&high&&low&&close){validatedObj=Object.assign({},obj,{type:type,high:high,low:low,open:open,close:close,value:null})}else if(!open&&!high&&!low&&!close){validatedObj=Object.assign({},obj,{type:type,high:value,low:value,open:value,close:value,value:value})}else{validatedObj=Object.assign({},obj,{type:type,high:high,low:low,open:open,close:close,value:null})}}else{validatedObj=Object.assign({},obj,{type:type,value:value})}validatedObj.typeinnavigator=sanitisePlotType(validatedObj.typeinnavigator,false);if(isOHLC&&(value||open||close||high||low)||value){return validatedObj}},objectExpando=function objectExpando(obj,stringValidator){var outputArr=[],plot=obj.plot,isPlotObject=isObject(plot),action=obj.hasOwnProperty("plot")&&!(isPlotObject&&!plot.hasOwnProperty("value"))&&"axis",isValidString=function isValidString(str){return stringHasContent(str)&&stringValidator(str)};if(objectHasContent(obj)){var array=[];outputArr.push(Object.assign({},obj,{plot:array}));if(isPlotObject||stringHasContent(plot)){plot=[plot]}if(arrayHasContent(plot)){var filteredInfo=plot.filter(function(ele){return!!ele});filteredInfo.forEach(function(ele){var output;if(isObject(ele)){var type=ele.type||obj.plottype;output=sanitiseObj(Object.assign({},ele,{aggregation:ele.aggregation||obj.aggregation||"avg",type:type}),isValidString)}else if(isValidString(ele)){output=sanitiseObj({value:ele,type:obj.plottype,aggregation:obj.aggregation||"avg"},isValidString)}output&&array.push(output)})}}return outputArr[0]&&outputArr[0].plot.length?{output:outputArr,action:isArray(plot)&&plot.length>outputArr[0].plot.length?"plot":false}:{output:[],action:action}},arrayExpando=function arrayExpando(arr,stringValidator,mergingInfo){var output=[],info,actions=[];arr.forEach(function(ele){if(isString(ele)){output=output.concat(stringExpando(ele,stringValidator,mergingInfo))}else if(isObject(ele)){info=objectExpando(ele,stringValidator);output=output.concat(info.output);info.action&&actions.push(info.action)}});return{output:output,actions:actions}},expander=function expander(config,stringValidator,mergingInfo){var output=[],actions=[];if(isString(config)){output=stringExpando(config,stringValidator)}else if(isObject(config)){var action;var _objectExpando=objectExpando(config,stringValidator);output=_objectExpando.output;action=_objectExpando.action;action&&actions.push(action)}else if(isArray(config)){var _arrayExpando=arrayExpando(config,stringValidator,mergingInfo);output=_arrayExpando.output;actions=_arrayExpando.actions}return{output:output,actions:actions}},expando=function expando(dataTableColumns,config,isY){if(dataTableColumns===void 0){dataTableColumns=[]}if(isY===void 0){isY=true}var output=[],actions=[],outputLen=0,isObjectConfig=isObject(config),stringValidator=function stringValidator(str){return dataTableColumns.indexOf(str)>=0};if(config){var _expander=expander(config,stringValidator);output=_expander.output;actions=_expander.actions;outputLen=output.length;var containsAxisAction=actions.includes("axis");if(isObjectConfig){containsAxisAction&&(actions=["fullaxis"])}else if(isArray(config)&&outputLen<config.length){if(outputLen){!containsAxisAction&&actions.push("axis")}else{actions=["fullaxis"]}}}if(!output.length){var _expander2=expander(dataTableColumns,truthFn,isObjectConfig&&config);output=_expander2.output}isY&&output.forEach(function(obj){if(!isString(obj.title)){var nameArr=obj.plot.map(function(ob){return ob.value});obj.title=nameArr.join(" - ")}});return{expandedAxis:output,actions:unique(actions)}};export default expando;