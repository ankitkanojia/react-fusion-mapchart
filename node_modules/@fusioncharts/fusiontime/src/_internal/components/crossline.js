import _inheritsLoose from"@babel/runtime/helpers/inheritsLoose";import{SmartRenderer}from"@fusioncharts/core/src/component-interface";import{pluck,pluckNumber}from"@fusioncharts/core/src/lib";import isValidNumber from"@fusioncharts/utils/src/type/is-valid-number";var UNDEF;var VERTICAL="vertical",END="end",MIDDLE="middle",START="start",GUTTER_5=5,M="M",L="L",l="l",h="h",v="v",z="z";var Crossline=function(_SmartRenderer){_inheritsLoose(Crossline,_SmartRenderer);function Crossline(){return _SmartRenderer.apply(this,arguments)||this}var _proto=Crossline.prototype;_proto.__setDefaultConfig=function __setDefaultConfig(){_SmartRenderer.prototype.__setDefaultConfig.call(this);var crosslineConfig=this.config;crosslineConfig.type=VERTICAL;crosslineConfig.value=UNDEF;crosslineConfig._defaultLineStyle={stroke:"#9a9a9a","stroke-width":1,"stroke-opacity":1};crosslineConfig._defaultTextStyle={fill:"#ffffff","font-size":"10px","font-weight":"normal","font-style":"normal","text-anchor":"middle"};crosslineConfig._defaultTagStyle={fill:"#5f5f5f"};crosslineConfig._defaultPadding=2};_proto.configureAttributes=function configureAttributes(obj){_SmartRenderer.prototype.configureAttributes.call(this,obj);var config=this.config,type,inputStyle,baseTextStyle=this.getFromEnv("baseTextStyle"),getStyleDef=this.getFromEnv("getStyleDef");for(var key in obj){if(obj.hasOwnProperty(key)){config[key]=obj[key]}}type=config.type;inputStyle=config.inputStyle;config._lineStyle=Object.assign({},config._defaultLineStyle,getStyleDef(inputStyle.line),getStyleDef(inputStyle[type+"-line"]));config._textStyle=Object.assign({},config._defaultTextStyle,baseTextStyle,getStyleDef(inputStyle.label),getStyleDef(inputStyle[type+"-label"]));config._tagStyle=Object.assign({},config._defaultTagStyle,getStyleDef(inputStyle.tag),getStyleDef(inputStyle[type+"-tag"]))};_proto.getPathArr=function getPathArr(){var crossline=this,selfConfig=crossline.config,isVertical=selfConfig.type===VERTICAL,scale=selfConfig.scale,value=selfConfig.value,pathArr,canvasConfig=crossline.getLinkedParent().config,canvasPadding=canvasConfig.padding,canvasLeft=canvasConfig.canvasLeft-canvasPadding.left,canvasTop=canvasConfig.canvasTop-canvasPadding.top,canvasWidth=canvasConfig.canvasWidth,canvasHeight=canvasConfig.canvasHeight;if(isVertical){pathArr=[M,scale.getRangeValue(value),canvasTop,v,canvasHeight]}else{pathArr=[M,canvasLeft,scale.getRangeValue(value),h,canvasWidth]}return pathArr};_proto.drawVerticalCrosslineText=function drawVerticalCrosslineText(){var crossline=this,selfConfig=crossline.config,dateRange=selfConfig.dateRange,text=selfConfig.timeFormatterFn({dateRange:dateRange,type:"crossline"}),value=selfConfig.value,scale=selfConfig.scale,padding=pluckNumber(selfConfig.padding,selfConfig._defaultPadding),canvasConfig=crossline.getLinkedParent().config,canvasPadding=canvasConfig.padding,canvasLeft=canvasConfig.canvasLeft-canvasPadding.left,canvasTop=canvasConfig.canvasTop-canvasPadding.top,canvasWidth=canvasConfig.canvasWidth,canvasHeight=canvasConfig.canvasHeight,canvasBottom=canvasTop+canvasHeight,canvasRight=canvasLeft+canvasWidth,smartLabel=crossline.getFromEnv("smartLabel"),markerPath,textOffset=0,rangeValue,smartText;if(isValidNumber(value)){smartLabel.setStyle(selfConfig._textStyle);smartText=smartLabel.getOriSize(text);rangeValue=scale.getRangeValue(value);crossline.addGraphicalElement({el:"group",container:{id:"thermo",label:"thermo",isParent:true},component:crossline,label:"crossline",attr:{name:"veritcal-crossline-marker-group"},id:"crossline"});if(rangeValue+smartText.width/2+2*padding>canvasRight){markerPath=[M,rangeValue,canvasBottom,L,rangeValue,canvasBottom+padding,v,smartText.height+2*padding,h,-(smartText.width+4*padding),v,-(smartText.height+2*padding),L,rangeValue-padding,canvasBottom+padding,z];selfConfig._textStyle["text-anchor"]=END;textOffset=-2*padding}else if(rangeValue-smartText.width/2-2*padding<canvasLeft){markerPath=[M,rangeValue,canvasBottom,L,rangeValue,canvasBottom+padding,v,smartText.height+2*padding,h,smartText.width+4*padding,v,-(smartText.height+2*padding),L,rangeValue+padding,canvasBottom+padding,z];selfConfig._textStyle["text-anchor"]=START;textOffset=2*padding}else{markerPath=[M,rangeValue,canvasBottom,L,rangeValue-padding,canvasBottom+padding,L,rangeValue-smartText.width/2-2*padding,canvasBottom+padding,v,smartText.height+2*padding,h,smartText.width+4*padding,v,-(smartText.height+2*padding),L,rangeValue+padding,canvasBottom+padding,z];selfConfig._textStyle["text-anchor"]=MIDDLE}crossline.addGraphicalElement({el:"path",attr:{path:markerPath},css:selfConfig._tagStyle,id:"vertical-crossline-marker",container:{label:"crossline"}});crossline.addGraphicalElement({el:"text",attr:{text:text,x:rangeValue+textOffset,y:canvasBottom+2*padding+smartText.height/2},css:selfConfig._textStyle,id:"vertical-crossline-text",container:{label:"crossline"}})}};_proto.drawHorizontalCrosslineText=function drawHorizontalCrosslineText(){var crossline=this,selfConfig=crossline.config,value=selfConfig.value,text=selfConfig.formatterFn({value:selfConfig.text,type:"crossline",prefix:selfConfig.prefix,suffix:selfConfig.suffix}),markerProp=this.getHorizontalMarkerProps();if(isValidNumber(value)){crossline.addGraphicalElement({el:"group",container:{id:"strato",label:"strato",isParent:true},component:crossline,label:"crossline",attr:{name:"horizontal-crossline-marker-group"},id:"crossline"});selfConfig._tagStyle.fill=pluck(selfConfig.markerFill,selfConfig._tagStyle.fill);selfConfig._tagStyle.stroke=pluck(selfConfig._tagStyle.stroke,selfConfig.markerFill);crossline.addGraphicalElement({el:"path",attr:{path:markerProp.markerPath},css:selfConfig._tagStyle,id:"horizontal-crossline-marker",container:{label:"crossline"}});crossline.addGraphicalElement({el:"text",attr:{text:text,x:markerProp.markerText.x,y:markerProp.markerText.y},css:selfConfig._textStyle,id:"horizontal-crossline-text",outlineText:selfConfig.showTextOutline,container:{label:"crossline"}})}};_proto.getHorizontalMarkerProps=function getHorizontalMarkerProps(){var crossline=this,selfConfig=crossline.config,value=selfConfig.value,scale=selfConfig.scale,yAxisAlignment=selfConfig.yAxisAlignment,padding=pluckNumber(selfConfig.padding,selfConfig._defaultPadding),canvasConfig=crossline.getLinkedParent().config,text=selfConfig.formatterFn({value:selfConfig.text,type:"crossline",prefix:selfConfig.prefix,suffix:selfConfig.suffix}),borderConfig=canvasConfig.borderConfig,canvasPadding=canvasConfig.padding,canvasLeft=canvasConfig.canvasLeft+borderConfig.leftBorder-canvasPadding.left,canvasWidth=canvasConfig.canvasWidth-borderConfig.rightBorder+canvasPadding.left,canvasRight=canvasLeft+canvasWidth,smartLabel=crossline.getFromEnv("smartLabel"),rangeValue,smartText,markerPath,markerText={},markerProp={};smartLabel.setStyle(selfConfig._textStyle);smartText=smartLabel.getSmartText(text);rangeValue=scale.getRangeValue(value);switch(yAxisAlignment){case"left":markerPath=[M,canvasLeft,rangeValue,h,-GUTTER_5,l,-GUTTER_5,-(smartText.height/2)-2*padding,h,-(smartText.width+2*padding),v,smartText.height+4*padding,h,smartText.width+2*padding,l,GUTTER_5,-smartText.height/2-2*padding];markerText.x=canvasLeft-2*GUTTER_5-(smartText.width+2*padding)/2;markerText.y=rangeValue;break;case"right":markerPath=[M,canvasRight,rangeValue,h,GUTTER_5,l,2*GUTTER_5,-(smartText.height/2)-2*padding,h,smartText.width+2*padding,v,smartText.height+4*padding,h,-(smartText.width+2*padding),l,-(2*GUTTER_5),-smartText.height/2-2*padding];markerText.x=canvasRight+2*GUTTER_5+(smartText.width+2*padding)/2;markerText.y=rangeValue;break}markerProp.markerPath=markerPath;markerProp.markerText=markerText;return markerProp};_proto.draw=function draw(){var crossline=this,config=crossline.config,pathArr=+config.value&&crossline.getPathArr()||[];crossline.addGraphicalElement({el:"group",container:{id:"strato",label:"strato",isParent:true},component:crossline,label:"verticalcrossline",attr:{name:"vertical-crossline-group"},id:"crossline"});crossline.addGraphicalElement({el:"group",container:{id:"strato",label:"strato",isParent:true},component:crossline,label:"horizontalcrossline",attr:{name:"horizontal-crossline-group"},id:"crossline"});if(pathArr.length){crossline.addGraphicalElement({el:"path",attr:{path:pathArr},css:config._lineStyle,container:{label:config.type+"crossline"},id:config.type+"-crossline-path",component:crossline})}if(config.showMarker){config.type===VERTICAL?crossline.drawVerticalCrosslineText():crossline.drawHorizontalCrosslineText()}};return Crossline}(SmartRenderer);export default Crossline;