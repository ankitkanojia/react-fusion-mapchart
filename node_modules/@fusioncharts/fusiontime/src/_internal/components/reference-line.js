import _inheritsLoose from"@babel/runtime/helpers/inheritsLoose";import{SmartRenderer}from"@fusioncharts/core/src/component-interface";import{extend2,pluck,pluckNumber}from"@fusioncharts/core/src/lib";import isValidNumber from"@fusioncharts/utils/src/type/is-valid-number";var anchorRadius=3,defaultTagWidth=29,GUTTER_5=5,M="M",L="L",h="h",v="v",z="z",COLOR_F3F3F3="#f3f3f3",COLOR_595959="#595959",RIGHT="right",MIDDLE="middle";var ReferenceLine=function(_SmartRenderer){_inheritsLoose(ReferenceLine,_SmartRenderer);function ReferenceLine(){var _this;_this=_SmartRenderer.call(this)||this;_this.hoverInHandler=function(){_this.setState("hovered",true);_this.asyncDraw()};_this.hoverOutHandler=function(){_this.setState("hovered",false);_this.asyncDraw()};return _this}var _proto=ReferenceLine.prototype;_proto.__setDefaultConfig=function __setDefaultConfig(){_SmartRenderer.prototype.__setDefaultConfig.call(this);this.config.defaultStyle={text:{fill:"#5F5F5F","vertical-align":"top",opacity:"1","fill-opacity":"1","stroke-opacity":"1","font-size":"11px","font-style":"normal"},marker:{fill:"#B70000",stroke:"#B70000","fill-opacity":"1","stroke-opacity":"1",opacity:"1",borderthickness:0,borderpadding:2,borderradius:0,borderdash:"none","stroke-width":"1"}};this.config.direction=RIGHT};_proto.configureAttributes=function configureAttributes(obj){if(obj===void 0){obj={}}_SmartRenderer.prototype.configureAttributes.call(this,obj);var refLine=this,selfConfig=refLine.config,getStyleDef=refLine.getFromEnv("getStyleDef"),refLineConfig=obj.referenceLine||{};selfConfig.markerStyle=getStyleDef(refLineConfig.style&&refLineConfig.style.marker);selfConfig.textStyle=getStyleDef(refLineConfig.style&&refLineConfig.style.text);selfConfig.label=pluck(refLineConfig.label,"");selfConfig.value=pluckNumber(refLineConfig.value,0);if(obj.yScale)selfConfig.yScale=obj.yScale;if(obj.formatterFn)selfConfig.formatterFn=obj.formatterFn;if(obj.prefix)selfConfig.prefix=obj.prefix;if(obj.suffix)selfConfig.suffix=obj.suffix;if(obj.direction)selfConfig.direction=obj.direction};_proto.getPathArr=function getPathArr(){var refLine=this,selfConfig=refLine.config,direction=selfConfig.direction,canvasConfig=refLine.getLinkedParent().config,yScale=selfConfig.yScale,yScaleDomain=yScale.getDomain(),rangeValue,value=selfConfig.value,pathArr=[];if(isValidNumber(yScaleDomain[0])&&isValidNumber(yScaleDomain[1])&&value>=yScaleDomain[0]&&value<=yScaleDomain[1]){rangeValue=yScale.getRangeValue(value);switch(direction){case"left":pathArr=["M",canvasConfig.canvasLeft+canvasConfig.canvasWidth-canvasConfig.borderConfig.rightBorder,rangeValue,"h",-canvasConfig.canvasWidth];break;case"right":pathArr=["M",canvasConfig.canvasLeft+canvasConfig.borderConfig.leftBorder,rangeValue,"h",canvasConfig.canvasWidth];break;case"top":case"bottom":pathArr=["M",rangeValue,canvasConfig.canvasTop,"v",canvasConfig.canvasHeight-canvasConfig.borderConfig.bottomBorder];break}}return pathArr};_proto.getLabelsProps=function getLabelsProps(pathArr,mergedMarkerStyle){var refLineConfig=this.config,direction=refLineConfig.direction,props={isValidLabel:false};if(pathArr.length&&refLineConfig.label){props.isValidLabel=true;switch(direction){case"top":props.x=pathArr[1];props.y=pathArr[2];props.textAnchor="start";break;case"bottom":props.x=pathArr[1];props.y=pathArr[4];props.textAnchor="start";break;case"left":props.x=pathArr[1]+pathArr[4]+anchorRadius;props.y=pathArr[2]+mergedMarkerStyle.borderpadding;props.textAnchor="start";break;case"right":props.x=pathArr[1]+pathArr[4]-mergedMarkerStyle.borderpadding-1;props.y=pathArr[2]+mergedMarkerStyle.borderpadding;props.textAnchor="end"}}return props};_proto.getBulbPoints=function getBulbPoints(pathArr){var refLineConfig=this.config,direction=refLineConfig.direction,bulbPoints={};if(pathArr){switch(direction){case"left":bulbPoints.cx=pathArr[1]+pathArr[4]-anchorRadius;bulbPoints.cy=pathArr[2];break;case"right":bulbPoints.cx=pathArr[1]+pathArr[4]+anchorRadius;bulbPoints.cy=pathArr[2]}}return bulbPoints};_proto.getTagProps=function getTagProps(mergedMarkerStyle,flagStyle){var refLine=this,selfConfig=this.config,value=selfConfig.value,smartLabel=refLine.getFromEnv("smartLabel"),smartText,canvasConfig=refLine.getLinkedParent().config,canvasLeft=canvasConfig.canvasLeft,canvasWidth=canvasConfig.canvasWidth,canvasRight=canvasConfig.canvasLeft+canvasWidth,rangeValue,tagWidth,tagPath,tagTextPosition={},tagProps={},direction=selfConfig.direction;rangeValue=selfConfig.yScale.getRangeValue(value);smartText=smartLabel.getSmartText(value);tagWidth=smartText.width+2*mergedMarkerStyle.borderpadding;tagWidth=tagWidth>defaultTagWidth?tagWidth:defaultTagWidth;switch(direction){case"right":tagPath=[M,canvasLeft+canvasConfig.borderConfig.leftBorder,rangeValue,L,canvasLeft-GUTTER_5,rangeValue,L,canvasLeft-2*GUTTER_5,rangeValue-smartText.height/2-2*flagStyle.marker.borderpadding,h,-tagWidth,v,smartText.height+4*flagStyle.marker.borderpadding,h,tagWidth,L,canvasLeft-GUTTER_5,rangeValue,z];tagTextPosition.x=canvasLeft-2*GUTTER_5-tagWidth/2;tagTextPosition.y=rangeValue;break;case"left":tagPath=[M,canvasRight,rangeValue,L,canvasRight+GUTTER_5,rangeValue,L,canvasRight+2*GUTTER_5,rangeValue-smartText.height/2-2*flagStyle.marker.borderpadding,h,tagWidth,v,smartText.height+4*flagStyle.marker.borderpadding,h,-tagWidth,L,canvasRight+GUTTER_5,rangeValue,z];tagTextPosition.x=canvasRight+2*GUTTER_5+tagWidth/2;tagTextPosition.y=rangeValue}tagProps.tagPath=tagPath;tagProps.tagTextPosition=tagTextPosition;return tagProps};_proto.draw=function draw(){var refLine=this,selfConfig=refLine.config,value=selfConfig.value,smartLabel=refLine.getFromEnv("smartLabel"),mergedTextStyle,mergedMarkerStyle,selfDefaultStyle=selfConfig.defaultStyle,flagStyle,bulbStyle,flagStyleMarker,flagStyleText,textStyle=selfConfig.textStyle,markerStyle=selfConfig.markerStyle,label=selfConfig.label,pathArr,labelProps,bulbPoints,tagProps,tagPath,tagTextPosition,isHovered=refLine.getState("hovered"),baseTextStyle=refLine.getFromEnv("baseTextStyle");refLine.addGraphicalElement({el:"group",container:{id:"thermo",label:"group",isParent:true},component:refLine,label:"refLine",attr:{name:"reference-line-thermo"},id:"thermo"},true);refLine.addGraphicalElement({el:"group",container:{id:"thermo",label:"refLine"},component:refLine,label:"refLine-thermo-hover-group",attr:{name:"reference-line-hover-elem-group"},id:"thermo"},true);refLine.addGraphicalElement({el:"group",container:{id:"thermo",label:"refLine"},component:refLine,label:"refLine-thermo-group",attr:{name:"reference-line-group"},id:"thermo"},true);Object.assign(selfDefaultStyle.text,baseTextStyle);mergedTextStyle=extend2(extend2({},selfDefaultStyle.text),textStyle);mergedMarkerStyle=extend2(extend2({},selfDefaultStyle.marker),markerStyle);bulbStyle=extend2({},mergedMarkerStyle);pathArr=refLine.getPathArr();labelProps=refLine.getLabelsProps(pathArr,mergedMarkerStyle);bulbPoints=refLine.getBulbPoints(pathArr);if(pathArr.length){refLine.addGraphicalElement({el:"path",attr:{path:pathArr,stroke:mergedMarkerStyle.stroke||mergedMarkerStyle.fill,"fill-opacity":mergedMarkerStyle["fill-opacity"],"stroke-opacity":mergedMarkerStyle["stroke-opacity"],"stroke-width":mergedMarkerStyle["stroke-width"],"stroke-linecap":mergedMarkerStyle["stroke-linecap"],opacity:mergedMarkerStyle.opacity*(isHovered?1:.4),"stroke-dasharray":mergedMarkerStyle["stroke-dasharray"]||"none"},container:{label:"refLine-thermo-group"},component:refLine,label:"line"},true);bulbStyle["stroke-width"]=isHovered?mergedMarkerStyle["stroke-width"]||1:0;bulbStyle.stroke=markerStyle&&markerStyle.stroke||COLOR_595959;refLine.addGraphicalElement({el:"circle",attr:{cx:bulbPoints.cx,cy:bulbPoints.cy,r:anchorRadius},container:{label:"refLine-thermo-group"},css:bulbStyle,component:refLine,label:"anchor"});if(isHovered){flagStyle=extend2(extend2(extend2({},selfDefaultStyle),{text:{fill:COLOR_F3F3F3}}),{text:textStyle,marker:markerStyle});if(labelProps.isValidLabel){refLine.addGraphicalElement({el:"text",attr:{text:label,x:labelProps.x,y:labelProps.y-mergedMarkerStyle.borderpadding*(mergedTextStyle["vertical-align"]==="top"?-1:1),opacity:mergedTextStyle.opacity,"text-anchor":labelProps.textAnchor,"text-bound":[mergedMarkerStyle.fill,mergedMarkerStyle.fill,mergedMarkerStyle.borderthickness,mergedMarkerStyle.borderpadding,mergedMarkerStyle.borderradius,mergedMarkerStyle.borderdash,.2]},css:mergedTextStyle,container:{label:"refLine-thermo-hover-group"},component:refLine,label:"label"},true)}smartLabel.setStyle({fontFamily:mergedTextStyle["font-family"],fontWeight:mergedTextStyle["font-weight"],fontSize:mergedTextStyle["font-size"],fontStyle:mergedTextStyle["font-style"]});tagProps=refLine.getTagProps(mergedMarkerStyle,flagStyle);tagPath=tagProps.tagPath;tagTextPosition=tagProps.tagTextPosition;flagStyleMarker=extend2({},flagStyle.marker);!flagStyleMarker.stroke&&(flagStyleMarker.stroke="none");refLine.addGraphicalElement({el:"path",attr:{path:tagPath},container:{label:"refLine-thermo-hover-group"},css:flagStyleMarker,component:refLine,label:"tag"},true);flagStyleText=extend2({},flagStyle.text);!flagStyleText["text-anchor"]&&(flagStyleText["text-anchor"]="middle");flagStyleText["vertical-align"]=MIDDLE;refLine.addGraphicalElement({el:"text",attr:{text:selfConfig.formatterFn({value:value,type:"referenceline",prefix:selfConfig.prefix,suffix:selfConfig.suffix}),x:tagTextPosition.x,y:tagTextPosition.y},css:flagStyleText,container:{label:"refLine-thermo-hover-group"},component:refLine,label:"tag-text"},true)}}};return ReferenceLine}(SmartRenderer);export default ReferenceLine;