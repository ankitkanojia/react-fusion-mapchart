import _inheritsLoose from"@babel/runtime/helpers/inheritsLoose";import{SmartRenderer}from"@fusioncharts/core/src/component-interface";import{utcMillisecond,utcSecond,utcMinute,utcHour,utcDay,utcWeek,utcMonth,utcYear}from"@fusioncharts/utils/src/time-intervals/utc";import{timeMillisecond,timeSecond,timeMinute,timeHour,timeDay,timeWeek,timeMonth,timeYear}from"@fusioncharts/utils/src/time-intervals";import{pluckNumber,pluck,BLANKSTRING,parseUnsafeString}from"@fusioncharts/core/src/lib";import TimeConverter from"@fusioncharts/utils/src/time-converter";var UNDEF;var GUTTER_2=2,GUTTER_5=5,GUTTER_8=8,GUTTER_14=14,MINIMAL="minimal";function isValidUnit(unit){switch(unit){case"year":case"quarter":case"month":case"week":case"day":case"hour":case"minute":case"second":case"millisecond":return true;default:return false}}function getInterVal(unit,isUTC){switch(unit){case"year":return isUTC?utcYear:timeYear;case"quarter":return isUTC?utcMonth:timeMonth;case"month":return isUTC?utcMonth:timeMonth;case"week":return isUTC?utcWeek:timeWeek;case"day":return isUTC?utcDay:timeDay;case"hour":return isUTC?utcHour:timeHour;case"minute":return isUTC?utcMinute:timeMinute;case"second":return isUTC?utcSecond:timeSecond;case"millisecond":return isUTC?utcMillisecond:timeMillisecond}}function isWithinMarker(timeMarker,chartX,chartY,marker){var hovered=false,dimensions=marker.markerDim,hoveredMarkerDim,returnObj,i,len;for(i=0,len=dimensions.length;i<len;i++){if(chartX>=dimensions[i].x&&chartX<=dimensions[i].x+dimensions[i].width&&chartY>=dimensions[i].y&&chartY<=dimensions[i].y+dimensions[i].height){hovered=true;timeMarker.config.previouslyHoveredIndex=marker.index;hoveredMarkerDim=dimensions[i];break}}returnObj={pointIndex:marker.index,hovered:hovered,pointObj:{hoveredMarkerDim:hoveredMarkerDim,index:hovered&&i,type:marker.type},previouslyHoveredIndex:timeMarker.config.previouslyHoveredIndex,component:timeMarker};return returnObj}function isValidMarker(currDomainStart,currDomainEnd,totalDomainStart,totalDomainEnd){if(currDomainStart>=totalDomainStart&&currDomainStart<=totalDomainEnd||currDomainEnd<=totalDomainEnd&&currDomainEnd>=totalDomainStart||totalDomainStart>=currDomainStart&&totalDomainEnd<=currDomainEnd){return true}return false}var TimeSpanMinMarker=function(_SmartRenderer){_inheritsLoose(TimeSpanMinMarker,_SmartRenderer);function TimeSpanMinMarker(){return _SmartRenderer.apply(this,arguments)||this}var _proto=TimeSpanMinMarker.prototype;_proto.__setDefaultConfig=function __setDefaultConfig(){_SmartRenderer.prototype.__setDefaultConfig.call(this);var config=this.config;config.defaultStyle={text:{fill:"#808080",opacity:1,"font-size":"10px","font-weight":"normal","font-style":"normal","text-anchor":"middle","fill-opacity":1,"stroke-opacity":1},marker:{fill:"#62b58f",opacity:.2,"fill-opacity":1,"stroke-opacity":1,"border-thickness":0,"border-padding":1,"border-radius":0,"border-dash":"none","stroke-width":1,"stroke-dasharray":"none",stroke:"none"}};config.hoveredIndex=UNDEF;config.previouslyHoveredIndex=UNDEF;config.hoveredOpacity=.5;config.valueArr=[];config.textArr=[];config.styleArr=[];config.domainArr=[];config.markerDetails=[];config.type=MINIMAL};_proto.getHoveredMarker=function getHoveredMarker(chartXArg,chartYArg){var timeMarker=this,chartX=chartXArg,chartY=chartYArg,selfConfig=timeMarker.config,canvas=timeMarker.getLinkedParent(),translationObj=canvas.getTranslation(),hoverDetails,markerDetails=selfConfig.markerDetails,i;chartX-=translationObj.x;chartY-=translationObj.y;for(i=markerDetails.length-1;i>=0;i--){hoverDetails=isWithinMarker(timeMarker,chartX,chartY,markerDetails[i]);if(hoverDetails.hovered){break}}return hoverDetails};_proto.setHoverInEffect=function setHoverInEffect(index){var timeMarker=this,chart=timeMarker.getFromEnv("chart");timeMarker.setData({hoveredIndex:index},true);chart.fireEvent("timeSpanMinMarkerHovered",{senderTimeMarker:timeMarker,hoveredIndex:index,hoveredFromOutside:true})};_proto.setHoverOutEffect=function setHoverOutEffect(){var timeMarker=this,chart=timeMarker.getFromEnv("chart");timeMarker.setData({hoveredIndex:UNDEF},true);chart.fireEvent("timeSpanMinMarkerHovered",{senderTimeMarker:timeMarker,hoveredIndex:UNDEF,hoveredFromOutside:true})};_proto.getToolTextConfiguration=function getToolTextConfiguration(toolTextArr,type){var timeMarker=this,_timeMarker$getFromEn=timeMarker.getFromEnv("tooltipStyle"),headerStyle=_timeMarker$getFromEn.header,bodyStyle=_timeMarker$getFromEn.body,totalWidth=2*GUTTER_5+2*GUTTER_8+GUTTER_14,totalHeight=2*GUTTER_5+2*GUTTER_8,smartLabel=timeMarker.getFromEnv("smartLabel"),smartText;smartLabel.setStyle({"font-size":headerStyle["font-size"],"font-family":headerStyle["font-family"],"font-weight":headerStyle["font-weight"]});smartText=smartLabel.getOriSize(toolTextArr[0]);totalWidth+=smartText.width;totalHeight+=smartText.height;if(toolTextArr[1]){smartLabel.setStyle({"font-size":bodyStyle["font-size"],"font-family":bodyStyle["font-family"],"font-weight":bodyStyle["font-weight"]});smartText=smartLabel.getOriSize(toolTextArr[1]);totalHeight+=smartText.height;totalWidth=Math.max(totalWidth,smartText.width);return{header:"<div style='margin: 5px;'>"+toolTextArr[0]+"</div>",body:"<div style='margin: 5px;'>"+toolTextArr[1]+"</div>",dimensions:{width:totalWidth,height:type!=="full"?totalHeight:0}}}return{header:"<div style='padding: 5px;'>"+toolTextArr[0]+"</div>",body:"",dimensions:{width:totalWidth,height:type!=="full"?totalHeight:0}}};_proto.getMarkerAndLabelConfiguration=function getMarkerAndLabelConfiguration(index,lineHeight){var timeMarker=this,selfConfig=timeMarker.config,canvasConfig=timeMarker.getLinkedParent().config,canvasPadding=canvasConfig.padding,leftPadding=canvasPadding.left,rightPadding=canvasPadding.right,topPadding=canvasPadding.top,bottomPaddding=canvasPadding.bottom,xScale=timeMarker.config.xScale,xScaleDomain=xScale.getDomain(),value=selfConfig.valueArr[index],repeat=value.repeat,startRangeValue,textX,textY,type,markerYPos,markerHeight,domainArr,startDomain,endDomain,endRangeValue;startRangeValue=xScale.getRangeValue(value.start);endRangeValue=xScale.getRangeValue(value.end);type=value.type;textY=type==="full"?canvasConfig.canvasTop+GUTTER_2+topPadding:canvasConfig.canvasTop+canvasConfig.canvasHeight-GUTTER_2-topPadding+bottomPaddding;markerYPos=type==="full"?canvasConfig.canvasTop-canvasConfig.padding.top:canvasConfig.canvasTop+canvasConfig.canvasHeight-(lineHeight+2*GUTTER_2)-topPadding+bottomPaddding;markerHeight=type==="full"?canvasConfig.canvasHeight:lineHeight+2*GUTTER_2;selfConfig.markerDetails[index].markerDim=[];selfConfig.domainArr[index]=[];selfConfig.markerDetails[index].index=index;if(!repeat&&isValidMarker(+value.start,+value.end,+xScaleDomain[0],+xScaleDomain[1])){selfConfig.domainArr[index].push({start:value.start,end:value.end});selfConfig.markerDetails[index].markerDim.push({x:startRangeValue-leftPadding+rightPadding,y:markerYPos,width:endRangeValue-startRangeValue,height:markerHeight});textX=startRangeValue-leftPadding+rightPadding;startDomain=value.start;endDomain=value.end}else if(repeat){selfConfig.domainArr[index]=domainArr=timeMarker.getAllValidDomains(value.start,value.end,value.repeat);if(domainArr.length){textX=xScale.getRangeValue(domainArr[0].start)-leftPadding+rightPadding;startDomain=domainArr[0].start;endDomain=domainArr[0].end;domainArr.forEach(function(domain){startRangeValue=xScale.getRangeValue(domain.start);endRangeValue=xScale.getRangeValue(domain.end);selfConfig.markerDetails[index].markerDim.push({x:startRangeValue-leftPadding+rightPadding,y:markerYPos,width:endRangeValue-startRangeValue,height:markerHeight});if(repeat.multiplier<0){textX=startRangeValue-leftPadding+rightPadding;startDomain=domain.start;endDomain=domain.end}})}}selfConfig.markerDetails[index].type=type;return{labelConfiguration:{x:textX,y:textY,width:endRangeValue-startRangeValue-2*GUTTER_2,startDomain:startDomain,endDomain:endDomain}}};_proto.getAllValidDomains=function getAllValidDomains(startValueArg,endValueArg,repeatConfig){var timeMarker=this,scale=timeMarker.config.xScale,totalDomain=scale.getDomain(),startValue=startValueArg,endValue=endValueArg,domainArr=[];if(+startValue<+totalDomain[0]&&repeatConfig.multiplier>0){while(!isValidMarker(+startValue,+endValue,+totalDomain[0],+totalDomain[1])&&+startValue<=+totalDomain[1]){startValue=repeatConfig.interval.offset(startValue,repeatConfig.multiplier);endValue=repeatConfig.interval.offset(endValue,repeatConfig.multiplier)}}while(isValidMarker(+startValue,+endValue,+totalDomain[0],+totalDomain[1])){domainArr.push({start:startValue,end:endValue});startValue=repeatConfig.interval.offset(startValue,repeatConfig.multiplier);endValue=repeatConfig.interval.offset(endValue,repeatConfig.multiplier)}return domainArr};_proto.configureAttributes=function configureAttributes(obj){if(obj===void 0){obj={}}_SmartRenderer.prototype.configureAttributes.call(this,obj);var timeMarker=this,config=timeMarker.config,styleArr=[],textArr=[],isUTC=timeMarker.getFromEnv("isUTC"),valueArr=[],valueObj,parser,startValue,timeFormat,endValue,unit,getStyleDef=timeMarker.getFromEnv("getStyleDef"),chartDefaultTextStyle=timeMarker.getFromEnv("textStyle"),baseTextStyle=timeMarker.getFromEnv("baseTextStyle"),timeMarkerConf=obj.timeMarker||[],i,len,marker,markerStyle,textStyle,styles,defaultMergeTextStyle=Object.assign({},chartDefaultTextStyle,config.defaultStyle.text,baseTextStyle);timeMarkerConf.sort(function(a,b){return+new Date(a.start)-+new Date(b.start)});for(i=0,len=timeMarkerConf.length;i<len;i++){marker=timeMarkerConf[i];if(!marker.start||marker.start===BLANKSTRING){continue}timeFormat=pluck(marker.timeformat,obj.defaultFormat);parser=isUTC?TimeConverter.utcParser(timeFormat):TimeConverter.parser(timeFormat);startValue=parser.parse(marker.start);endValue=parser.parse(marker.end);if(!startValue||!endValue){continue}if(+startValue>+endValue){var _ref=[endValue,startValue];startValue=_ref[0];endValue=_ref[1]}valueObj={start:startValue,end:endValue,startString:marker.start,endString:marker.end,timeFormat:timeFormat,type:marker.type||config.type};if(marker.repeat&&marker.repeat.unit&&Math.floor(+marker.repeat.multiplier)!==0&&isValidUnit(unit=marker.repeat.unit.toLowerCase())){valueObj.repeat={interval:getInterVal(unit,isUTC),multiplier:(unit==="quarter"?3:1)*pluckNumber(marker.repeat.multiplier,1)}}styles=marker.style||{};textStyle=Object.assign({},defaultMergeTextStyle,{"vertical-align":valueObj.type==="full"?"top":"bottom"},getStyleDef(styles.text));markerStyle=Object.assign({},config.defaultStyle.marker,getStyleDef(styles.marker));valueArr.push(valueObj);styleArr.push({text:textStyle,"text:hover":Object.assign({},textStyle,getStyleDef(styles["text:hover"])),marker:markerStyle,"marker:hover":Object.assign({},markerStyle,getStyleDef(styles["marker:hover"]))});textArr.push(pluck(marker.label,""))}if(obj.xScale)config.xScale=obj.xScale;config.hoveredIndex=obj.hoveredIndex;if(obj.timeMarker){config.valueArr=valueArr;config.styleArr=styleArr;config.textArr=textArr}};_proto.getAllLabelsProps=function getAllLabelsProps(index,labelConfiguration){var timeMarker=this,selfConfig=timeMarker.config,smartLabel=timeMarker.getFromEnv("smartLabel"),valueArr=selfConfig.valueArr,domains=selfConfig.domainArr[index],domain,timeFormat,markerDim,markerDetails=selfConfig.markerDetails[index],smartText,dateLabel,isUTC=timeMarker.getFromEnv("isUTC"),dateFormatter,x=labelConfiguration.x,y=labelConfiguration.y,width=labelConfiguration.width,height=smartLabel._lineHeight,labelArr=[],toolText,i,len,label=selfConfig.textArr[index];if(label){smartText=smartLabel.getSmartText(parseUnsafeString(label),width,height);labelArr.push({dim:{x:x+width/2+GUTTER_2,y:y-GUTTER_2},text:parseUnsafeString(smartText.text)})}timeFormat=valueArr[index].timeFormat;for(i=0,len=domains.length;i<len;i++){toolText=[];domain=domains[i];markerDim=markerDetails.markerDim[i];dateFormatter=isUTC?TimeConverter.utcFormatter(timeFormat):TimeConverter.formatter(timeFormat);dateLabel=dateFormatter.format(domain.start)+" - "+dateFormatter.format(domain.end);toolText.push(dateLabel);label&&toolText.push(smartText.oriText);markerDim.toolTextArr=toolText}return labelArr};_proto.createGroup=function createGroup(){var timeMarker=this,canvasConfig=timeMarker.getLinkedParent().config,padding=canvasConfig.padding,canvasLeft=canvasConfig.canvasBGLeft-padding.left,canvasTop=canvasConfig.canvasBGTop-padding.top,canvasWidth=canvasConfig.canvasBGWidth,canvasHeight=canvasConfig.canvasBGHeight,clipPath=["M"+canvasLeft+","+canvasTop,"L"+(canvasLeft+canvasWidth)+","+canvasTop,"L"+(canvasLeft+canvasWidth)+","+(canvasTop+canvasHeight),"L"+canvasLeft+","+(canvasTop+canvasHeight)+"Z"];timeMarker.addGraphicalElement({el:"group",container:{id:"thermo",label:"group",isParent:true},component:timeMarker,label:"timeMarker",attr:{name:"time-marker-min-group","clip-path":clipPath},id:"timeMarker"})};_proto.drawAllLabels=function drawAllLabels(allLabelProps,style){var timeMarker=this;allLabelProps.forEach(function(labelProp,index){timeMarker.addGraphicalElement({el:"text",attr:{text:labelProp.text,x:labelProp.dim.x,y:labelProp.dim.y,opacity:style.opacity},css:style,container:{label:"timeMarker"},id:"time-marker-label-"+index,component:timeMarker,label:"label"})})};_proto.draw=function draw(){var timeMarker=this,selfConfig=timeMarker.config,smartLabel=timeMarker.getFromEnv("smartLabel"),values=selfConfig.valueArr,styleArr=selfConfig.styleArr,allLabelProps,markerAndLabelConfiguartion,markerArr,labelConfiguration,i,j,isHovered,textStyle,markerStyle,len;timeMarker.createGroup();selfConfig.markerDetails=[];for(i=0,len=values.length;i<len;i++){isHovered=i===selfConfig.hoveredIndex;selfConfig.markerDetails[i]={};textStyle=isHovered?styleArr[i]["text:hover"]:styleArr[i].text;markerStyle=isHovered?styleArr[i]["marker:hover"]:styleArr[i].marker;smartLabel.setStyle({"font-size":textStyle["font-size"]||styleArr[i].text["font-size"],"font-family":textStyle["font-family"]||styleArr[i].text["font-family"],"font-weight":textStyle["font-weight"]||styleArr[i].text["font-weight"]});smartLabel.getOriSize(selfConfig.textArr[i]);markerAndLabelConfiguartion=timeMarker.getMarkerAndLabelConfiguration(i,selfConfig.textArr[i]?smartLabel._lineHeight:13);markerArr=selfConfig.markerDetails[i].markerDim;labelConfiguration=markerAndLabelConfiguartion.labelConfiguration;if(markerArr.length){allLabelProps=timeMarker.getAllLabelsProps(i,labelConfiguration);for(j=0;j<markerArr.length;j++){timeMarker.addGraphicalElement({el:"rect",attr:{x:markerArr[j].x,y:markerArr[j].y,width:markerArr[j].width,height:markerArr[j].height,opacity:markerStyle.opacity},container:{label:"timeMarker"},css:markerStyle,id:"time-span-marker-"+i+j,component:timeMarker,label:"line"})}timeMarker.drawAllLabels(allLabelProps,textStyle)}}};_proto.getType=function getType(){return"timeMarker"};_proto.getName=function getName(){return"timeSpanMinMarker"};return TimeSpanMinMarker}(SmartRenderer);export default TimeSpanMinMarker;