import _inheritsLoose from"@babel/runtime/helpers/inheritsLoose";import FlagMarker from"./flag-marker";import{pluck}from"@fusioncharts/core/src/lib";import{convertColor}from"@fusioncharts/core/src/lib/lib-graphics";var pathStr="M4,0 C1.79053125,0 0,1.79103125 0,4 C0,5.609375 0.95509375,6.98634375 2.32421875,7.62109375 L4,16 L5.67578125,7.62109375 C7.0449375,6.98634375 8,5.609375 8,4 C8,1.79103125 6.209,0 4,0 Z M4,6 C2.8955,6 2,5.1045 2,4 C2,2.8955 2.8955,2 4,2 C5.1045,2 6,2.8955 6,4 C6,5.1045 5.1045,6 4,6 Z",pinHeight=16,pinWidth=9,UNDEF;var PinMarker=function(_FlagMarker){_inheritsLoose(PinMarker,_FlagMarker);function PinMarker(){var _this;_this=_FlagMarker.call(this)||this;_this._getMarkerBounds=function(){return{width:pinWidth,height:pinHeight}};return _this}var _proto=PinMarker.prototype;_proto._drawMarkers=function _drawMarkers(){var marker=this,config=marker.config,dataInfo=config.dataInfo,y,currdata,x,getStyleDef=marker.getFromEnv("getStyleDef"),style,currMarker,index,stroke,fill,id,fontColor,attrObj,multipleMarkers,currMarkerObj,parent=marker.getLinkedParent(),info=parent._getRelevantInfo(),markerInfo=config.markerInfo;for(index in markerInfo){currdata=dataInfo[index];currMarkerObj=markerInfo[index];multipleMarkers=currMarkerObj.multipleMarkers;id=currMarkerObj.id;y=currdata.y-pinHeight;x=currdata.x+(currdata.width||0)/2-pinWidth/2;if(multipleMarkers){stroke=convertColor(config["default-stroke-color-multiple"],pluck(currMarkerObj["forced-stroke-opacity"],currMarkerObj["applicable-stroke-opacity"],config["default-stroke-opacity"])*100);currMarkerObj.fill=fill=convertColor(config["default-stroke-color-multiple"],pluck(currMarkerObj["forced-fill-opacity"],currMarkerObj["applicable-fill-opacity"],config["default-opacity"])*100)}else{currMarker=currMarkerObj.markers[0];style=getStyleDef(currMarker.style)||{};stroke=style.stroke||currMarkerObj["forced-stroke-opacity"]||currMarkerObj["applicable-stroke-opacity"]?convertColor(pluck(style.stroke,info.fill),pluck(currMarkerObj["forced-stroke-opacity"],style["stroke-opacity"],currMarkerObj["applicable-stroke-opacity"],config["default-stroke-opacity"])*100):UNDEF;fill=style.fill||currMarkerObj["forced-fill-opacity"]||currMarkerObj["applicable-fill-opacity"]?convertColor(pluck(style.fill,info.fill),pluck(currMarkerObj["forced-fill-opacity"],style["fill-opacity"],style.opacity,currMarkerObj["applicable-fill-opacity"],config["default-opacity"])*100):UNDEF;currMarkerObj.fill=pluck(fill,info.fill)}currMarkerObj.value=currdata.value;attrObj={path:pathStr,transform:"t"+x+","+y};stroke&&(attrObj.stroke=stroke);fill&&(attrObj.fill=fill);marker.addGraphicalElement({el:"path",container:{label:"group"},id:id,attr:attrObj,label:"pinMarker"},true);if(multipleMarkers){fontColor=convertColor(config["default-font-color-multiple"]);attrObj={text:currMarkerObj.markers.length,x:x+pinWidth+2,y:y+pinHeight/4,fill:fontColor,stroke:fontColor,"fill-opacity":config["default-font-opacity"],"stroke-opacity":config["default-font-opacity"],"text-anchor":"middle"};marker.addGraphicalElement({el:"text",container:{label:"group"},id:id,attr:attrObj,label:"markerText"},true)}}};_proto.getName=function getName(){return"pinMarker"};return PinMarker}(FlagMarker);export default PinMarker;