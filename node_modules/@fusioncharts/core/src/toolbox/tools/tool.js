import _inheritsLoose from"@babel/runtime/helpers/inheritsLoose";import{SmartRenderer}from"../../component-interface";import{pluckNumber,touchEnabled,pluck,convertColor,extend2,BLANKSTRING,UNDEF}from"../../lib";import{preConfig as _preConfig}from"./helper";var FILL_COLOR="ffffff",FILL_ALPHA_COLOR="cccccc",FILL_SYMBOL_COLOR="ffffff",FILL_STROKE="bbbbbb",FILL_SYMBOL_STROKE="9a9a9a";var _optionSanitization=function _optionSanitization(options){for(var key in options){if(options.hasOwnProperty(key)){var element=options[key];if(element===UNDEF||!/tooltext/.test(key)&&element===""){delete options[key]}}}return options};var Tool=function(_SmartRenderer){_inheritsLoose(Tool,_SmartRenderer);function Tool(id){var _this;_this=_SmartRenderer.call(this,id)||this;_this._listeners={};return _this}var _proto=Tool.prototype;_proto.getName=function getName(){return"button"};_proto.getType=function getType(){return"tool"};_proto.__setDefaultConfig=function __setDefaultConfig(){var config=this.config;config.scale=1.15;config.width=touchEnabled?20:15;config.height=touchEnabled?20:15;config.radius=touchEnabled?4:2;config.spacing=2.5;config.marginTop=2.5;config.marginLeft=2.5;config.marginRight=2.5;config.marginBottom=2.5;config.fill=FILL_COLOR;config.fillAlpha=FILL_ALPHA_COLOR;config.symbolFill=FILL_SYMBOL_COLOR;config.stroke=FILL_STROKE;config.symbolStroke=FILL_SYMBOL_STROKE;config.strokeWidth=1;config.symbolStrokeWidth=1;config.symbolPadding=5;config.symbolHPadding=5;config.symbolVPadding=5;config.fillAlpha=100;config.stateStyle={};config.text=BLANKSTRING;config.marginTop=config.marginLeft=config.marginRight=config.marginBottom=2.5;config.labelFontSize=12};_proto.configureAttributes=function configureAttributes(configs){if(configs===void 0){configs={}}var toolConfig=this.config,bSymbolPadding,posX,posY,options=_optionSanitization(configs);Object.assign(toolConfig,options);toolConfig.symbolName=toolConfig.name;this.setState("visible",toolConfig.isHidden!==true);toolConfig.marginTop=pluckNumber(options.marginTop,options.spacing,toolConfig.marginTop);toolConfig.marginLeft=pluckNumber(options.marginLeft,options.spacing,toolConfig.marginLeft);toolConfig.marginRight=pluckNumber(options.marginRight,options.spacing,toolConfig.marginRight);toolConfig.marginBottom=pluckNumber(options.marginBottom,options.spacing,toolConfig.marginBottom);toolConfig.fill=pluck(options.fill,toolConfig.fill);toolConfig.fillAlpha=pluckNumber(options.fillAlpha,toolConfig.fillAlpha);toolConfig.labelFill=pluck(options.labelFill,toolConfig.labelFill);toolConfig.symbolFill=pluck(options.symbolFill,toolConfig.symbolFill);toolConfig.hoverFill=pluck(options.hoverFill,toolConfig.hoverFill);toolConfig.stroke=pluck(options.stroke,toolConfig.stroke);toolConfig.symbolStroke=pluck(options.symbolStroke,toolConfig.symbolStroke);toolConfig.strokeWidth=pluckNumber(options.strokeWidth,toolConfig.strokeWidth);toolConfig.symbolStrokeWidth=pluckNumber(options.symbolStrokeWidth,toolConfig.symbolStrokeWidth);bSymbolPadding=toolConfig.symbolPadding=pluckNumber(options.symbolPadding,toolConfig.symbolPadding);toolConfig.symbolHPadding=pluckNumber(options.symbolHPadding,bSymbolPadding);toolConfig.symbolVPadding=pluckNumber(options.symbolVPadding,bSymbolPadding);toolConfig.hAlign=pluck(options.hAlign,"center").toLowerCase();toolConfig.vAlign=pluck(options.vAlign,"middle").toLowerCase();toolConfig.containerInfo=options.containerInfo||{id:"group",label:"group",isParent:true};posX=options.x;posY=options.y;if(typeof posX==="undefined"||typeof posY==="undefined"){toolConfig.spaceNotHardCoded=true}else{toolConfig.x=posX;toolConfig.y=posY;toolConfig.spaceNotHardCoded=false}};_proto.setDimension=function setDimension(dim){if(dim===void 0){dim={}}var conf=this.config;dim.x!==UNDEF&&(conf.x=dim.x);dim.y!==UNDEF&&(conf.y=dim.y);dim.width!==UNDEF&&(conf.width=conf.width&&conf.width>dim.width?conf.width:dim.width);dim.height!==UNDEF&&(conf.height=conf.height&&conf.height>dim.height?conf.height:dim.height)};_proto.getAlignment=function getAlignment(){return{hAlign:this.config.hAlign,vAlign:this.config.vAlign}};_proto.getLogicalSpace=function getLogicalSpace(){var _this$config=this.config,width=_this$config.width,height=_this$config.height,marginTop=_this$config.marginTop,marginLeft=_this$config.marginLeft,marginRight=_this$config.marginRight,marginBottom=_this$config.marginBottom,scale=_this$config.scale;width*=scale;height*=scale;if(this.config.skipGraphics||this.getState("removed")){width=height=marginBottom=marginLeft=marginRight=marginTop=0}return{width:width,height:height,marginTop:marginTop,marginLeft:marginLeft,marginRight:marginRight,marginBottom:marginBottom}};_proto.setCurrentState=function setCurrentState(value){this.config.state=value;this.asyncDraw()};_proto.getCurrentState=function getCurrentState(){return this.config.state};_proto.draw=function draw(){var tool=this,toolConfig=tool.config,props=toolConfig,text=toolConfig.text,config=tool.getFromEnv("tool-config"),defConfObj,dimConfig,attr;if(toolConfig.skipGraphics){return}dimConfig={width:toolConfig.width*toolConfig.scale,height:toolConfig.height*toolConfig.scale,r:toolConfig.radius*toolConfig.scale,verticalPadding:toolConfig.symbolVPadding*toolConfig.scale,horizontalPadding:toolConfig.symbolHPadding};defConfObj=extend2({},toolConfig.stateStyle[toolConfig.state]||_preConfig[toolConfig.state]||{});if(toolConfig.state==="activated"||toolConfig.state==="disabled"||toolConfig.state==="pressed"){defConfObj.config.normal.fill=convertColor(pluck(config.fill,defConfObj.config.normal.fill));defConfObj.config.normal["symbol-stroke"]=convertColor(pluck(config.symbolStroke,defConfObj.config.normal["symbol-stroke"]));defConfObj.config.normal.symbolFill=convertColor(pluck(config.symbolFill,defConfObj.config.normal.symbolFill));defConfObj.config.normal.stroke=convertColor(pluck(config.stroke,defConfObj.config.normal.stroke));defConfObj.config.normal.symbolStroke=convertColor(pluck(config.symbolStroke,defConfObj.config.normal.symbolStroke));defConfObj.config.hover.fill=convertColor(pluck(config.hoverFill,defConfObj.config.hover.fill))}attr=extend2({button:[toolConfig.x,toolConfig.y,text,toolConfig.symbolName,dimConfig,toolConfig.labelFontSize,toolConfig.labelFontFamily],"button-label":text,"button-padding":[toolConfig.symbolHPadding,toolConfig.symbolVPadding*toolConfig.scale],"button-repaint":[props.x,props.y,toolConfig.width*toolConfig.scale,toolConfig.height*toolConfig.scale,toolConfig.radius*toolConfig.scale],fill:convertColor(toolConfig.fill),labelFill:convertColor(toolConfig.labelFill),symbolFill:convertColor(toolConfig.symbolFill),hoverFill:toolConfig.hoverFill,stroke:convertColor(toolConfig.stroke),"symbol-stroke":convertColor(toolConfig.symbolStroke||toolConfig.stroke),"stroke-width":toolConfig.strokeWidth,"symbol-stroke-width":pluckNumber(toolConfig.symbolStrokeWidth,toolConfig.strokeWidth)},defConfObj);attr.fill=convertColor(pluck(toolConfig.fill,defConfObj.fill));!toolConfig.isHidden&&tool.addGraphicalElement({el:"button",attr:attr,css:toolConfig.btnTextStyle,component:tool,container:toolConfig.containerInfo,label:"button",id:"button",tooltext:toolConfig.tooltext})};_proto.hide=function hide(){this.config.isHidden=true;this.setState("visible",false);this.asyncDraw()};_proto.show=function show(){this.config.isHidden=false;this.setState("visible",true);this.asyncDraw()};return Tool}(SmartRenderer);export default Tool;