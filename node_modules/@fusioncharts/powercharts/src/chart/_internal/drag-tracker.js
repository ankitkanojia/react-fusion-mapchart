import _assertThisInitialized from"@babel/runtime/helpers/assertThisInitialized";import _inheritsLoose from"@babel/runtime/helpers/inheritsLoose";import{ComponentInterface}from"@fusioncharts/core/src/component-interface";import{getMouseCoordinate}from"@fusioncharts/core/src/lib";var dragstart=function dragstart(dragTracker){return function(oriEvent){var chart=dragTracker.getFromEnv("chart"),config=dragTracker.config,datasets=chart.config.datasetOrder||chart.getDatasets(),coordinate=getMouseCoordinate(chart.getFromEnv("chart-container"),oriEvent,chart),pointFound,hoveredInfo,i=datasets.length,dataset;while(i--&&!pointFound){dataset=datasets[i];if(dataset&&dataset.getState("visible")){hoveredInfo=dataset._getHoveredPlot&&dataset._getHoveredPlot(coordinate.chartX,coordinate.chartY);if(hoveredInfo&&hoveredInfo.hovered){pointFound=true;config.dragStart=true;config.hoveredInfo=hoveredInfo;config.hoveredDS=dataset;dataset.drag("dragstart",oriEvent,hoveredInfo.pointIndex,coordinate)}}}}},dragmove=function dragmove(dragTracker){return function(oriEvent){var config=dragTracker.config;config.dragStart&&config.hoveredDS.drag("dragmove",oriEvent,config.hoveredInfo.pointIndex)}},dragend=function dragend(dragTracker){return function(oriEvent){var config=dragTracker.config;config.dragStart&&config.hoveredDS.drag("dragend",oriEvent,config.hoveredInfo.pointIndex);config.dragStart=false}},eventList=["fc-dragstart","fc-dragmove","fc-dragend"];var DragTracker=function(_ComponentInterface){_inheritsLoose(DragTracker,_ComponentInterface);function DragTracker(){var _this;_this=_ComponentInterface.call(this)||this;_this.config.eventCb={"fc-dragstart":dragstart(_assertThisInitialized(_this)),"fc-dragmove":dragmove(_assertThisInitialized(_this)),"fc-dragend":dragend(_assertThisInitialized(_this))};return _this}var _proto=DragTracker.prototype;_proto.addEvents=function addEvents(){var dragTracker=this,allCanvas=dragTracker.getFromEnv("chart").getChildren("canvas");dragTracker.removeEvents();allCanvas.forEach(function(canvas){eventList.forEach(function(events){canvas.addEventListener(events,dragTracker.config.eventCb[events])})})};_proto.removeEvents=function removeEvents(){var dragTracker=this,allCanvas=dragTracker.getFromEnv("chart").getChildren("canvas");allCanvas.forEach(function(canvas){eventList.forEach(function(events){canvas.removeEventListener(events,dragTracker.config.eventCb[events])})})};_proto._dispose=function _dispose(){this.removeEvents();_ComponentInterface.prototype._dispose.call(this)};return DragTracker}(ComponentInterface);export default DragTracker;