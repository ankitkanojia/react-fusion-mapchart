import _assertThisInitialized from"@babel/runtime/helpers/assertThisInitialized";import _inheritsLoose from"@babel/runtime/helpers/inheritsLoose";import Base from"./input-base";var STATE_ACTIVATED="activated";var ZoomReset=function(_Base){_inheritsLoose(ZoomReset,_Base);function ZoomReset(){var _this;_this=_Base.call(this)||this;var input=_assertThisInitialized(_this);input._toggle=function(){input.isEnabled()&&input.zoomOut()};return _this}var _proto=ZoomReset.prototype;_proto.getName=function getName(){return"zoomResetButton"};_proto.configure=function configure(){_Base.prototype.configure.call(this);var input=this,manager=input.getLinkedParent();input.configureButton();input.disable();manager.registerDependancy([{derivedInteraction:["zoomin","zoomout"],callback:input.dependancyFn,component:input}])};_proto.configureButton=function configureButton(){var input=this;!input.config.skipGraphics&&input.setLinkedItem("button",input.createButton({icon:"resetIcon",handlers:{click:input._toggle},tooltext:input.config.tooltext,state:"disabled"}));input.disable()};_proto.enable=function enable(){this.config.state=STATE_ACTIVATED;_Base.prototype.enable.call(this)};_proto.zoomOut=function zoomOut(){var input=this,hookFn=input.config.hookFn,startX,endX,startY,endY,level=1,eventArgs={},visiblerange;input.getFromEnv("axesObArr").forEach(function(axisOb){visiblerange=axisOb.stack[0];if(!visiblerange){return}input.getFromEnv("chart").getFromEnv("animationManager").setAnimationState("zoomOut");hookFn&&hookFn(visiblerange.minValue,visiblerange.maxValue);if(axisOb.isY){startY=visiblerange.minValue;endY=visiblerange.maxValue}else{startX=visiblerange.minValue;endX=visiblerange.maxValue;eventArgs=input.constructor._getZoomInfo(startX,endX,axisOb.axis)}axisOb.axis.setVisibleConfig(visiblerange.minValue,visiblerange.maxValue);axisOb.stack.length=0});input._raiseZoomEvents("zoomout","zoomreset",Object.assign(eventArgs,{level:level,startX:startX,endX:endX,startY:startY,endY:endY}));input.disable()};_proto.dependancyFn=function dependancyFn(eventOb){if(eventOb.type==="zoomin"){this.enable()}else if(eventOb.type==="zoomout"){if(!this._checkStackLen()){this.disable()}}};return ZoomReset}(Base);export default ZoomReset;