{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub_Rs\\\\react-fusion-mapchart\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Maps from 'fusioncharts/fusioncharts.maps'; //download all map from https://cdn.fusioncharts.com/downloads/addons/fusionmaps-xt-definition.zip\n\nimport WorldWithCountries from 'fusioncharts/maps/fusioncharts.worldwithcountries';\nimport ReactFCWorldWithCountries from 'react-fusioncharts';\nimport ReactFCWorld from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nimport World from 'fusioncharts/maps/fusioncharts.world';\nReactFCWorldWithCountries.fcRoot(FusionCharts, Maps, WorldWithCountries, FusionTheme);\nReactFCWorld.fcRoot(FusionCharts, Maps, World, FusionTheme);\n\nclass MapChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataSource_world: {\n        \"chart\": {\n          showCanvasBorder: true,\n          canvasBorderColor: \"#000000\",\n          canvasBorderThickness: 1,\n          showBorder: true,\n          borderColor: \"#000000\",\n          fillColor: \"#f1f1f1\",\n          theme: \"fusion\",\n          caption: \"Increased Population History by country Last Year\",\n          xAxisName: \"Population\",\n          yAxisName: \"Growth\",\n          entityFillHoverColor: \"#FFF9C4\",\n          numberSuffix: \"%\",\n          showBorder: \"1\",\n          bgColor: \"#FFFFFF\",\n          //Tooltip customization\n          toolTipBorderColor: \"#666666\",\n          toolTipBgColor: \"#efefef\",\n          toolTipBgAlpha: \"80\",\n          showToolTipShadow: \"1\",\n          //Theme\n          plotBorderThickness: \"0.25\",\n          showxaxispercentvalues: \"1\",\n          showValues: \"1\"\n        },\n        colorrange: {\n          \"color\": [{\n            \"minvalue\": \"0\",\n            \"maxvalue\": \"100\",\n            \"color\": \"#FFD74D\"\n          }, {\n            \"minvalue\": \"0\",\n            \"maxvalue\": \"100\",\n            \"color\": \"#FB8C00\"\n          }, {\n            \"minvalue\": \"0\",\n            \"maxvalue\": \"100\",\n            \"color\": \"#E65100\"\n          }]\n        },\n        data: [{\n          \"id\": \"NA\",\n          \"value\": \"20\",\n          \"showLabel\": \"1\"\n        }, {\n          \"id\": \"SA\",\n          \"value\": \"30\",\n          \"showLabel\": \"1\"\n        }, {\n          \"id\": \"AS\",\n          \"value\": \"48\",\n          \"showLabel\": \"1\"\n        }, {\n          \"id\": \"EU\",\n          \"value\": \"20\",\n          \"showLabel\": \"1\"\n        }, {\n          \"id\": \"AF\",\n          \"value\": \"2.58\",\n          \"showLabel\": \"1\"\n        }, {\n          \"id\": \"AU\",\n          \"value\": \"15\",\n          \"showLabel\": \"1\"\n        }]\n      },\n      dataSource_worldWithCountry: {\n        \"chart\": {\n          showCanvasBorder: true,\n          canvasBorderColor: \"#000000\",\n          canvasBorderThickness: 1,\n          showBorder: true,\n          borderColor: \"#000000\",\n          fillColor: \"#f1f1f1\",\n          caption: \"* USA traffic not displayed on Heat Map\",\n          includevalueinlabels: \"1\",\n          showHoverEffect: false,\n          showEntityHoverEffect: false,\n          theme: \"fusion\"\n        },\n        data: [{\n          \"id\": \"27\",\n          \"value\": \"8\",\n          \"color\": \"#f65122\"\n        }, {\n          \"id\": \"159\",\n          \"value\": \"3\",\n          \"color\": \"#fcc50b\"\n        }, {\n          \"id\": \"142\",\n          \"value\": \"3\",\n          \"color\": \"#f65122\"\n        }, {\n          \"id\": \"141\",\n          \"value\": \"9\",\n          \"color\": \"#f3172d\"\n        }, {\n          \"id\": \"173\",\n          \"value\": \"9\",\n          \"color\": \"#f3172d\"\n        }, {\n          \"id\": \"113\",\n          \"value\": \"5\",\n          \"color\": \"#f65122\"\n        }, {\n          \"id\": \"193\",\n          \"value\": \"5\",\n          \"color\": \"#f65122\"\n        }, {\n          \"id\": \"122\",\n          \"value\": \"9\",\n          \"color\": \"#f65122\"\n        }]\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Map With World Chart\"), React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(ReactFCWorldWithCountries, {\n      type: \"worldwithcountries\",\n      width: \"80%\",\n      height: \"500\",\n      dataFormat: \"JSON\",\n      dataSource: this.state.dataSource_worldWithCountry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Map World Chart\"), React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(ReactFCWorld, {\n      type: \"world\",\n      width: \"80%\",\n      height: \"500\",\n      dataFormat: \"JSON\",\n      dataSource: this.state.dataSource_world,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MapChart;","map":{"version":3,"sources":["E:\\GitHub_Rs\\react-fusion-mapchart\\src\\App.js"],"names":["React","Component","FusionCharts","Maps","WorldWithCountries","ReactFCWorldWithCountries","ReactFCWorld","FusionTheme","World","fcRoot","MapChart","state","dataSource_world","showCanvasBorder","canvasBorderColor","canvasBorderThickness","showBorder","borderColor","fillColor","theme","caption","xAxisName","yAxisName","entityFillHoverColor","numberSuffix","bgColor","toolTipBorderColor","toolTipBgColor","toolTipBgAlpha","showToolTipShadow","plotBorderThickness","showxaxispercentvalues","showValues","colorrange","data","dataSource_worldWithCountry","includevalueinlabels","showHoverEffect","showEntityHoverEffect","render","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport FusionCharts from 'fusioncharts';\r\nimport Maps from 'fusioncharts/fusioncharts.maps';\r\n\r\n//download all map from https://cdn.fusioncharts.com/downloads/addons/fusionmaps-xt-definition.zip\r\nimport WorldWithCountries from 'fusioncharts/maps/fusioncharts.worldwithcountries';\r\nimport ReactFCWorldWithCountries  from 'react-fusioncharts';\r\nimport ReactFCWorld from 'react-fusioncharts';\r\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\r\nimport World from 'fusioncharts/maps/fusioncharts.world';\r\n\r\nReactFCWorldWithCountries.fcRoot(FusionCharts, Maps, WorldWithCountries, FusionTheme);\r\nReactFCWorld.fcRoot(FusionCharts, Maps, World, FusionTheme);\r\n\r\nclass MapChart extends Component {\r\n    state = {\r\n        dataSource_world: {\r\n            \"chart\": {\r\n                showCanvasBorder: true,\r\n                canvasBorderColor: \"#000000\",\r\n                canvasBorderThickness: 1,\r\n                showBorder: true,\r\n                borderColor: \"#000000\",\r\n                fillColor: \"#f1f1f1\",\r\n                theme: \"fusion\",\r\n                caption: \"Increased Population History by country Last Year\",\r\n                xAxisName: \"Population\",\r\n                yAxisName: \"Growth\",\r\n                entityFillHoverColor: \"#FFF9C4\",\r\n                numberSuffix: \"%\",\r\n                showBorder: \"1\",\r\n                bgColor: \"#FFFFFF\",\r\n                //Tooltip customization\r\n                toolTipBorderColor: \"#666666\",\r\n                toolTipBgColor: \"#efefef\",\r\n                toolTipBgAlpha: \"80\",\r\n                showToolTipShadow: \"1\",\r\n                //Theme\r\n                plotBorderThickness: \"0.25\",\r\n                showxaxispercentvalues: \"1\",\r\n                showValues: \"1\"\r\n            },\r\n            colorrange: {\r\n                \"color\": [{\r\n                    \"minvalue\": \"0\",\r\n                    \"maxvalue\": \"100\",\r\n                    \"color\": \"#FFD74D\"\r\n                }, {\r\n                    \"minvalue\": \"0\",\r\n                    \"maxvalue\": \"100\",\r\n                    \"color\": \"#FB8C00\"\r\n                }, {\r\n                    \"minvalue\": \"0\",\r\n                    \"maxvalue\": \"100\",\r\n                    \"color\": \"#E65100\"\r\n                }]\r\n            },\r\n            data: [{\r\n                \"id\": \"NA\",\r\n                \"value\": \"20\",\r\n                \"showLabel\": \"1\"\r\n            }, {\r\n                \"id\": \"SA\",\r\n                \"value\": \"30\",\r\n                \"showLabel\": \"1\"\r\n            }, {\r\n                \"id\": \"AS\",\r\n                \"value\": \"48\",\r\n                \"showLabel\": \"1\"\r\n            }, {\r\n                \"id\": \"EU\",\r\n                \"value\": \"20\",\r\n                \"showLabel\": \"1\"\r\n            }, {\r\n                \"id\": \"AF\",\r\n                \"value\": \"2.58\",\r\n                \"showLabel\": \"1\"\r\n            }, {\r\n                \"id\": \"AU\",\r\n                \"value\": \"15\",\r\n                \"showLabel\": \"1\"\r\n            }]\r\n        },\r\n        dataSource_worldWithCountry: {\r\n            \"chart\": {\r\n                showCanvasBorder: true,\r\n                canvasBorderColor: \"#000000\",\r\n                canvasBorderThickness: 1,\r\n                showBorder: true,\r\n                borderColor: \"#000000\",\r\n                fillColor: \"#f1f1f1\",\r\n                caption: \"* USA traffic not displayed on Heat Map\",\r\n                includevalueinlabels: \"1\",\r\n                showHoverEffect: false,\r\n                showEntityHoverEffect: false,\r\n                theme: \"fusion\",\r\n            },\r\n            data: [\r\n                {\r\n                    \"id\": \"27\",\r\n                    \"value\": \"8\",\r\n                    \"color\" : \"#f65122\"\r\n                },\r\n                {\r\n                    \"id\": \"159\",\r\n                    \"value\": \"3\",\r\n                    \"color\" : \"#fcc50b\"\r\n                },\r\n                {\r\n                    \"id\": \"142\",\r\n                    \"value\": \"3\",\r\n                    \"color\" : \"#f65122\"\r\n                },\r\n                {\r\n                    \"id\": \"141\",\r\n                    \"value\": \"9\",\r\n                    \"color\" : \"#f3172d\"\r\n                },\r\n                {\r\n                    \"id\": \"173\",\r\n                    \"value\": \"9\",\r\n                    \"color\" : \"#f3172d\"\r\n                },\r\n                {\r\n                    \"id\": \"113\",\r\n                    \"value\": \"5\",\r\n                    \"color\" : \"#f65122\"\r\n                },\r\n                {\r\n                    \"id\": \"193\",\r\n                    \"value\": \"5\",\r\n                    \"color\" : \"#f65122\"\r\n                },\r\n                {\r\n                    \"id\": \"122\",\r\n                    \"value\": \"9\",\r\n                    \"color\" : \"#f65122\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h2 style={{textAlign:\"center\"}}>Map With World Chart</h2>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <ReactFCWorldWithCountries\r\n                        type=\"worldwithcountries\"\r\n                        width=\"80%\"\r\n                        height=\"500\"\r\n                        dataFormat=\"JSON\"\r\n                        dataSource={this.state.dataSource_worldWithCountry} />\r\n                </div>\r\n                <br />\r\n                <h2 style={{ textAlign: \"center\" }}>Map World Chart</h2>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <ReactFCWorld\r\n                        type=\"world\"\r\n                        width=\"80%\"\r\n                        height=\"500\"\r\n                        dataFormat=\"JSON\"\r\n                        dataSource={this.state.dataSource_world} />\r\n                </div>\r\n            </React.Fragment>);\r\n    }\r\n}\r\n\r\nexport default MapChart;\r\n"]},"metadata":{},"sourceType":"module"}